{"version":3,"file":"static/js/9841.6eb8971d.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/inbox.js","components/CurrencyInputPanel/index.tsx","components/NavigationTabs/index.tsx","components/earn/styled.tsx","components/swap/UnsupportedCurrencyFooter.tsx","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","components/addLiquidity/OwnershipWarning.tsx","../../../node_modules/react-feather/dist/icons/cloud-off.js","../../../node_modules/react-feather/dist/icons/bar-chart-2.js","components/LiquidityChartRangeInput/Area.tsx","components/LiquidityChartRangeInput/AxisBottom.tsx","components/LiquidityChartRangeInput/svg.tsx","components/LiquidityChartRangeInput/Brush.tsx","components/LiquidityChartRangeInput/Line.tsx","../../../node_modules/react-feather/dist/icons/refresh-ccw.js","../../../node_modules/react-feather/dist/icons/zoom-in.js","../../../node_modules/react-feather/dist/icons/zoom-out.js","components/LiquidityChartRangeInput/Zoom.tsx","components/LiquidityChartRangeInput/Chart.tsx","components/LiquidityChartRangeInput/index.tsx","components/LiquidityChartRangeInput/hooks.ts","components/PositionPreview/index.tsx","components/RangeSelector/PresetsButtons.tsx","utils/approveAmountCalldata.ts","pages/AddLiquidity/Review.tsx","pages/AddLiquidity/index.tsx","hooks/useDerivedPositionInfo.ts","hooks/useArgentWalletContract.ts","pages/AddLiquidity/redirects.tsx","utils/addressesAreEquivalent.ts","utils/unwrappedToken.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Inbox=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"22 12 16 12 14 15 10 15 8 12 2 12\"}),React.createElement(\"path\",{d:\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"}))}));Inbox.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Inbox.displayName=\"Inbox\";export default Inbox;","import { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, SwapEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { TraceEvent } from 'analytics'\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\nimport PrefetchBalancesWrapper from 'components/PrefetchBalancesWrapper/PrefetchBalancesWrapper'\nimport { isSupportedChain } from 'constants/chains'\nimport { darken } from 'polished'\nimport { ReactNode, useCallback, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ThemedText } from 'theme/components'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { CurrencySearchFilters } from 'components/SearchModal/CurrencySearch'\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport { useCurrencyBalance } from '../../state/connection/hooks'\nimport { ButtonGray } from '../Button'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween, RowFixed } from '../Row'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { FiatValue } from './FiatValue'\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${flexColumnNoWrap};\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\n\n  z-index: 1;\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  transition: height 1s ease;\n  will-change: height;\n`\n\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background-color: ${({ theme }) => theme.surface2};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  ${({ theme, hideInput, disabled }) =>\n    !disabled &&\n    `\n    :focus,\n    :hover {\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\n    }\n  `}\n`\n\nconst CurrencySelect = styled(ButtonGray)<{\n  visible: boolean\n  selected: boolean\n  hideInput?: boolean\n  disabled?: boolean\n  pointerEvents?: string\n}>`\n  align-items: center;\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n  cursor: pointer;\n  border-radius: 16px;\n  outline: none;\n  user-select: none;\n  border: none;\n  font-size: 24px;\n  font-weight: 535;\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\n  :focus,\n  :hover {\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\n  }\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\n`\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  ${flexRowNoWrap};\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\n`\n\nconst LabelRow = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\n  }\n`\n\nconst FiatRow = styled(LabelRow)`\n  justify-content: flex-end;\n  padding: 0px 1rem 0.75rem;\n  height: 32px;\n`\n\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  line-height: 0px;\n`\n\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n  margin: 0 0.25rem 0 0.35rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n    stroke-width: 1.5px;\n  }\n`\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n  font-size: 20px;\n  white-space: nowrap;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    font-size: 16px;\n  }\n`\n\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\n  background-color: transparent;\n  background-color: ${({ theme }) => theme.accent2};\n  border: none;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.accent1};\n  cursor: pointer;\n  font-size: 11px;\n  font-weight: 535;\n  margin-left: 0.25rem;\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  padding: 4px 6px;\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\n\n  :hover {\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\n  }\n\n  :focus {\n    outline: none;\n  }\n`\n\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\n  ${loadingOpacityMixin};\n  text-align: left;\n`\n\nconst StyledPrefetchBalancesWrapper = styled(PrefetchBalancesWrapper)<{ $fullWidth: boolean }>`\n  width: ${({ $fullWidth }) => ($fullWidth ? '100%' : 'auto')};\n`\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: ReactNode\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  fiatValue?: { data?: number; isLoading: boolean }\n  id: string\n  showCurrencyAmount?: boolean\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\n  locked?: boolean\n  loading?: boolean\n  currencySearchFilters?: CurrencySearchFilters\n}\n\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  onCurrencySelect,\n  currency,\n  otherCurrency,\n  id,\n  currencySearchFilters,\n  showCurrencyAmount,\n  renderBalance,\n  fiatValue,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  locked = false,\n  loading = false,\n  ...rest\n}: CurrencyInputPanelProps) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account, chainId } = useWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const theme = useTheme()\n  const { formatCurrencyAmount } = useFormatter()\n\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n\n  const chainAllowed = isSupportedChain(chainId)\n\n  return (\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\n      {!locked && (\n        <>\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\n              {!hideInput && (\n                <StyledNumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                  disabled={!chainAllowed}\n                  $loading={loading}\n                  maxDecimals={currency?.decimals}\n                />\n              )}\n\n              <StyledPrefetchBalancesWrapper shouldFetchOnAccountUpdate={modalOpen} $fullWidth={hideInput}>\n                <CurrencySelect\n                  disabled={!chainAllowed}\n                  visible={currency !== undefined}\n                  selected={!!currency}\n                  hideInput={hideInput}\n                  className=\"open-currency-select-button\"\n                  onClick={() => {\n                    if (onCurrencySelect) {\n                      setModalOpen(true)\n                    }\n                  }}\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\n                >\n                  <Aligner>\n                    <RowFixed>\n                      {pair ? (\n                        <span style={{ marginRight: '0.5rem' }}>\n                          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n                        </span>\n                      ) : (\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size=\"24px\" />\n                      )}\n                      {pair ? (\n                        <StyledTokenName className=\"pair-name-container\">\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\n                        </StyledTokenName>\n                      ) : (\n                        <StyledTokenName\n                          className=\"token-symbol-container\"\n                          active={Boolean(currency && currency.symbol)}\n                        >\n                          {(currency && currency.symbol && currency.symbol.length > 20\n                            ? currency.symbol.slice(0, 4) +\n                              '...' +\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\n                        </StyledTokenName>\n                      )}\n                    </RowFixed>\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\n                  </Aligner>\n                </CurrencySelect>\n              </StyledPrefetchBalancesWrapper>\n            </InputRow>\n            {Boolean(!hideInput && !hideBalance && currency) && (\n              <FiatRow>\n                <RowBetween>\n                  <LoadingOpacityContainer $loading={loading}>\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\n                  </LoadingOpacityContainer>\n                  {account && (\n                    <RowFixed style={{ height: '17px' }}>\n                      <ThemedText.DeprecatedBody\n                        onClick={onMax}\n                        color={theme.neutral3}\n                        fontWeight={535}\n                        fontSize={14}\n                        style={{ display: 'inline', cursor: 'pointer' }}\n                      >\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\n                            <Trans>\n                              Balance:{' '}\n                              {formatCurrencyAmount({\n                                amount: selectedCurrencyBalance,\n                                type: NumberType.TokenNonTx,\n                              })}\n                            </Trans>\n                          ))}\n                      </ThemedText.DeprecatedBody>\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\n                        <TraceEvent\n                          events={[BrowserEvent.onClick]}\n                          name={SwapEventName.SWAP_MAX_TOKEN_AMOUNT_SELECTED}\n                          element={InterfaceElementName.MAX_TOKEN_AMOUNT_BUTTON}\n                        >\n                          <StyledBalanceMax onClick={onMax}>\n                            <Trans>MAX</Trans>\n                          </StyledBalanceMax>\n                        </TraceEvent>\n                      )}\n                    </RowFixed>\n                  )}\n                </RowBetween>\n              </FiatRow>\n            )}\n          </Container>\n        </>\n      )}\n      {onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCurrencyAmount={showCurrencyAmount}\n          currencySearchFilters={currencySearchFilters}\n        />\n      )}\n    </InputPanel>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport SettingsTab from 'components/Settings'\nimport { ReactNode } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexRowNoWrap } from 'theme/styles'\n\nimport { RowBetween } from '../Row'\n\nconst Tabs = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst StyledLink = styled(Link)<{ flex?: string }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\n\nconst FindPoolTabsText = styled(ThemedText.H1Small)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.neutral1};\n`\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\n        <Link to={origin}>\n          <StyledArrowLeft />\n        </Link>\n        <FindPoolTabsText>\n          <Trans>Import V2 pool</Trans>\n        </FindPoolTabsText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nconst AddRemoveTitleText = styled(ThemedText.H1Small)<{ $center: boolean }>`\n  flex: 1;\n  margin: auto;\n  text-align: ${({ $center }) => ($center ? 'center' : 'start')};\n`\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  autoSlippage,\n  children,\n}: {\n  adding: boolean\n  creating: boolean\n  autoSlippage: Percent\n  showBackLink?: boolean\n  children?: ReactNode\n}) {\n  const { chainId } = useWeb3React()\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\n        <StyledLink\n          to=\"..\"\n          onClick={(e) => {\n            e.preventDefault()\n            navigate(-1)\n\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n          flex={children ? '1' : undefined}\n        >\n          <StyledArrowLeft stroke={theme.neutral2} />\n        </StyledLink>\n        <AddRemoveTitleText $center={!children}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add liquidity</Trans>\n          ) : (\n            <Trans>Remove liquidity</Trans>\n          )}\n        </AddRemoveTitleText>\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} hideRoutingSettings />\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport xlUnicorn from '../../assets/images/xl_uni.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonEmpty } from 'components/Button'\nimport Card, { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Modal from 'components/Modal'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { CloseIcon, ExternalLink, ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\n\nconst DetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`\n\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`\n\nconst AddressText = styled(ThemedText.DeprecatedBlue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`\n\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies,\n}: {\n  show: boolean\n  currencies: (Currency | undefined | null)[]\n}) {\n  const { chainId } = useWeb3React()\n  const [showDetails, setShowDetails] = useState(false)\n\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return currency?.wrapped\n        })\n      : []\n\n  const unsupportedTokens = useUnsupportedTokens()\n\n  return (\n    <DetailsFooter show={show}>\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\n        <Card padding=\"2rem\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <ThemedText.DeprecatedMediumHeader>\n                <Trans>Unsupported assets</Trans>\n              </ThemedText.DeprecatedMediumHeader>\n              <CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" />\n            </RowBetween>\n            {tokens.map((token) => {\n              return (\n                token &&\n                unsupportedTokens &&\n                Object.keys(unsupportedTokens).includes(token.address) && (\n                  <OutlineCard key={token.address?.concat('not-supported')} data-testid=\"unsupported-token-card\">\n                    <AutoColumn gap=\"10px\">\n                      <AutoRow gap=\"5px\" align=\"center\">\n                        <CurrencyLogo currency={token} size=\"24px\" />\n                        <ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody>\n                      </AutoRow>\n                      {chainId && (\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                          <AddressText>{token.address}</AddressText>\n                        </ExternalLink>\n                      )}\n                    </AutoColumn>\n                  </OutlineCard>\n                )\n              )\n            })}\n            <AutoColumn gap=\"lg\">\n              <ThemedText.DeprecatedBody fontWeight={535}>\n                <Trans>\n                  Some assets are not available through this interface because they may not work well with the smart\n                  contracts or we are unable to allow trading for legal reasons.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </AutoColumn>\n          </AutoColumn>\n        </Card>\n      </Modal>\n      <StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\">\n        <ThemedText.DeprecatedBlue>\n          <Trans>Read more about unsupported assets</Trans>\n        </ThemedText.DeprecatedBlue>\n      </StyledButtonEmpty>\n    </DetailsFooter>\n  )\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\nimport { TickProcessed } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\n\nimport { Ticks } from '../graphql/thegraph/AllV3TicksQuery'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: Ticks,\n  pivot: number,\n  ascending: boolean\n): TickProcessed[] {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  }\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = []\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i].tick)\n    const sdkPrice = tickToPrice(token0, token1, tick)\n    const currentTickProcessed: TickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice,\n    }\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet)\n      )\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      )\n    }\n\n    processedTicks.push(currentTickProcessed)\n    previousTickProcessed = currentTickProcessed\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse()\n  }\n\n  return processedTicks\n}\n","import { ChainId, Currency, Price, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, TICK_SPACINGS, tickToPrice } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { TickData, Ticks } from 'graphql/thegraph/AllV3TicksQuery'\nimport { useAllV3TicksQuery } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport JSBI from 'jsbi'\nimport ms from 'ms'\nimport { useEffect, useMemo, useState } from 'react'\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\n\nimport { chainToApolloClient } from 'graphql/thegraph/apollo'\nimport { PoolState, usePoolMultichain } from './usePools'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  tick: number\n  liquidityActive: JSBI\n  liquidityNet: JSBI\n  price0: string\n  sdkPrice: Price<Token, Token>\n}\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\n  tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : undefined\n\nfunction useTicksFromSubgraph(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  skip = 0,\n  chainId: ChainId\n) {\n  const apolloClient = chainToApolloClient[chainId]\n  const poolAddress =\n    currencyA && currencyB && feeAmount\n      ? Pool.getAddress(\n          currencyA?.wrapped,\n          currencyB?.wrapped,\n          feeAmount,\n          undefined,\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\n        )\n      : undefined\n\n  return useAllV3TicksQuery({\n    variables: { poolAddress: poolAddress?.toLowerCase(), skip },\n    skip: !poolAddress,\n    pollInterval: ms(`30s`),\n    client: apolloClient,\n  })\n}\n\nconst MAX_THE_GRAPH_TICK_FETCH_VALUE = 1000\n// Fetches all ticks for a given pool\nfunction useAllV3Ticks(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  chainId: ChainId\n): {\n  isLoading: boolean\n  error: unknown\n  ticks?: TickData[]\n} {\n  const [skipNumber, setSkipNumber] = useState(0)\n  const [subgraphTickData, setSubgraphTickData] = useState<Ticks>([])\n  const { data, error, loading: isLoading } = useTicksFromSubgraph(currencyA, currencyB, feeAmount, skipNumber, chainId)\n\n  useEffect(() => {\n    if (data?.ticks.length) {\n      setSubgraphTickData((tickData) => [...tickData, ...data.ticks])\n      if (data.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber) => skipNumber + MAX_THE_GRAPH_TICK_FETCH_VALUE)\n      }\n    }\n  }, [data?.ticks])\n\n  return {\n    isLoading: isLoading || data?.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE,\n    error,\n    ticks: subgraphTickData,\n  }\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  chainId?: ChainId\n): {\n  isLoading: boolean\n  error: any\n  currentTick?: number\n  activeTick?: number\n  liquidity?: JSBI\n  sqrtPriceX96?: JSBI\n  data?: TickProcessed[]\n} {\n  const defaultChainId = useWeb3React().chainId ?? ChainId.MAINNET\n  const pool = usePoolMultichain(currencyA?.wrapped, currencyB?.wrapped, feeAmount, chainId ?? defaultChainId)\n  const liquidity = pool[1]?.liquidity\n  const sqrtPriceX96 = pool[1]?.sqrtRatioX96\n\n  const currentTick = pool[1]?.tickCurrent\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(currentTick, feeAmount), [currentTick, feeAmount])\n\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount, chainId ?? defaultChainId)\n\n  return useMemo(() => {\n    if (\n      !currencyA ||\n      !currencyB ||\n      activeTick === undefined ||\n      pool[0] !== PoolState.EXISTS ||\n      !ticks ||\n      ticks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const token0 = currencyA?.wrapped\n    const token1 = currencyB?.wrapped\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = ticks.findIndex(({ tick }) => tick > activeTick) - 1\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error('TickData pivot not found')\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const sdkPrice = tickToPrice(token0, token1, activeTick)\n    const activeTickProcessed: TickProcessed = {\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot].tick) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice,\n    }\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n    return {\n      isLoading,\n      error,\n      currentTick,\n      activeTick,\n      liquidity,\n      sqrtPriceX96,\n      data: ticksProcessed,\n    }\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error, currentTick, liquidity, sqrtPriceX96])\n}\n","import { Trans } from '@lingui/macro'\nimport { AlertTriangle } from 'react-feather'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst ExplainerText = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n`\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n  margin-bottom: 8px;\n`\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.deprecated_accentWarningSoft};\n  border-radius: 16px;\n  margin-top: 12px;\n  max-width: 480px;\n  padding: 12px 20px;\n  width: 100%;\n`\n\ninterface OwnershipWarningProps {\n  ownerAddress: string\n}\n\nconst OwnershipWarning = ({ ownerAddress }: OwnershipWarningProps) => (\n  <Wrapper>\n    <TitleRow>\n      <AlertTriangle style={{ marginRight: '8px' }} />\n      <ThemedText.SubHeader color=\"deprecated_accentWarning\">\n        <Trans>Warning</Trans>\n      </ThemedText.SubHeader>\n    </TitleRow>\n    <ExplainerText>\n      <Trans>\n        You are not the owner of this LP position. You will not be able to withdraw the liquidity from this position\n        unless you own the following address: {ownerAddress}\n      </Trans>\n    </ExplainerText>\n  </Wrapper>\n)\n\nexport default OwnershipWarning\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var CloudOff=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"path\",{d:\"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"}),React.createElement(\"line\",{x1:\"1\",y1:\"1\",x2:\"23\",y2:\"23\"}))}));CloudOff.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},CloudOff.displayName=\"CloudOff\";export default CloudOff;","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var BarChart2=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"18\",y1:\"20\",x2:\"18\",y2:\"10\"}),React.createElement(\"line\",{x1:\"12\",y1:\"20\",x2:\"12\",y2:\"4\"}),React.createElement(\"line\",{x1:\"6\",y1:\"20\",x2:\"6\",y2:\"14\"}))}));BarChart2.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},BarChart2.displayName=\"BarChart2\";export default BarChart2;","import { area, curveStepAfter, ScaleLinear } from 'd3'\nimport { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { ChartEntry } from './types'\n\nconst Path = styled.path<{ fill?: string }>`\n  opacity: 0.5;\n  stroke: ${({ fill, theme }) => fill ?? theme.accent1};\n  fill: ${({ fill, theme }) => fill ?? theme.accent1};\n`\n\nexport const Area = ({\n  series,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  fill,\n}: {\n  series: ChartEntry[]\n  xScale: ScaleLinear<number, number>\n  yScale: ScaleLinear<number, number>\n  xValue: (d: ChartEntry) => number\n  yValue: (d: ChartEntry) => number\n  fill?: string\n}) =>\n  useMemo(\n    () => (\n      <Path\n        fill={fill}\n        d={\n          area()\n            .curve(curveStepAfter)\n            .x((d: unknown) => xScale(xValue(d as ChartEntry)))\n            .y1((d: unknown) => yScale(yValue(d as ChartEntry)))\n            .y0(yScale(0))(\n            series.filter((d) => {\n              const value = xScale(xValue(d))\n              return value > 0 && value <= window.innerWidth\n            }) as Iterable<[number, number]>\n          ) ?? undefined\n        }\n      />\n    ),\n    [fill, series, xScale, xValue, yScale, yValue]\n  )\n","import { NumberValue, ScaleLinear, axisBottom, Axis as d3Axis, select } from 'd3'\nimport { useMemo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledGroup = styled.g`\n  line {\n    display: none;\n  }\n\n  text {\n    color: ${({ theme }) => theme.neutral2};\n    transform: translateY(5px);\n  }\n`\n\nconst Axis = ({ axisGenerator }: { axisGenerator: d3Axis<NumberValue> }) => {\n  const axisRef = (axis: SVGGElement) => {\n    axis &&\n      select(axis)\n        .call(axisGenerator)\n        .call((g) => g.select('.domain').remove())\n  }\n\n  return <g ref={axisRef} />\n}\n\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  offset = 0,\n}: {\n  xScale: ScaleLinear<number, number>\n  innerHeight: number\n  offset?: number\n}) =>\n  useMemo(\n    () => (\n      <StyledGroup transform={`translate(0, ${innerHeight + offset})`}>\n        <Axis axisGenerator={axisBottom(xScale).ticks(6)} />\n      </StyledGroup>\n    ),\n    [innerHeight, offset, xScale]\n  )\n","/**\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = (height: number) =>\n  [\n    // handle\n    `M 0 0`, // move to origin\n    `v ${height}`, // vertical line\n    'm 1 0', // move 1px to the right\n    `V 0`, // second vertical line\n    `M 0 1`, // move to origin\n\n    // head\n    'h 12', // horizontal line\n    'q 2 0, 2 2', // rounded corner\n    'v 22', // vertical line\n    'q 0 2 -2 2', // rounded corner\n    'h -12', // horizontal line\n    `z`, // close path\n  ].join(' ')\n\nexport const brushHandleAccentPath = () =>\n  [\n    'm 5 7', // move to first accent\n    'v 14', // vertical line\n    'M 0 0', // move to origin\n    'm 9 7', // move to second accent\n    'v 14', // vertical line\n    'z',\n  ].join(' ')\n\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10,\n}: {\n  color: string\n  size?: number\n  margin?: number\n}) => (\n  <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />\n)\n","import { brushHandleAccentPath, brushHandlePath, OffScreenHandle } from 'components/LiquidityChartRangeInput/svg'\nimport { BrushBehavior, brushX, D3BrushEvent, ScaleLinear, select } from 'd3'\nimport usePrevious from 'hooks/usePrevious'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Handle = styled.path<{ color: string }>`\n  cursor: ew-resize;\n  pointer-events: none;\n\n  stroke-width: 3;\n  stroke: ${({ color }) => color};\n  fill: ${({ color }) => color};\n`\n\nconst HandleAccent = styled.path`\n  cursor: ew-resize;\n  pointer-events: none;\n\n  stroke-width: 1.5;\n  stroke: ${({ theme }) => theme.white};\n  opacity: ${({ theme }) => theme.opacity.hover};\n`\n\nconst LabelGroup = styled.g<{ visible: boolean }>`\n  opacity: ${({ visible }) => (visible ? '1' : '0')};\n  transition: opacity 300ms;\n`\n\nconst TooltipBackground = styled.rect`\n  fill: ${({ theme }) => theme.surface3};\n`\n\nconst Tooltip = styled.text`\n  text-anchor: middle;\n  font-size: 13px;\n  fill: ${({ theme }) => theme.neutral1};\n`\n\n// flips the handles draggers when close to the container edges\nconst FLIP_HANDLE_THRESHOLD_PX = 20\n\n// margin to prevent tick snapping from putting the brush off screen\nconst BRUSH_EXTENT_MARGIN_PX = 2\n\n/**\n * Returns true if every element in `a` maps to the\n * same pixel coordinate as elements in `b`\n */\nconst compare = (a: [number, number], b: [number, number], xScale: ScaleLinear<number, number>): boolean => {\n  // normalize pixels to 1 decimals\n  const aNorm = a.map((x) => xScale(x).toFixed(1))\n  const bNorm = b.map((x) => xScale(x).toFixed(1))\n  return aNorm.every((v, i) => v === bNorm[i])\n}\n\nexport const Brush = ({\n  id,\n  xScale,\n  interactive,\n  brushLabelValue,\n  brushExtent,\n  setBrushExtent,\n  innerWidth,\n  innerHeight,\n  westHandleColor,\n  eastHandleColor,\n}: {\n  id: string\n  xScale: ScaleLinear<number, number>\n  interactive: boolean\n  brushLabelValue: (d: 'w' | 'e', x: number) => string\n  brushExtent: [number, number]\n  setBrushExtent: (extent: [number, number], mode: string | undefined) => void\n  innerWidth: number\n  innerHeight: number\n  westHandleColor: string\n  eastHandleColor: string\n}) => {\n  const brushRef = useRef<SVGGElement | null>(null)\n  const brushBehavior = useRef<BrushBehavior<SVGGElement> | null>(null)\n\n  // only used to drag the handles on brush for performance\n  const [localBrushExtent, setLocalBrushExtent] = useState<[number, number] | null>(brushExtent)\n  const [showLabels, setShowLabels] = useState(false)\n  const [hovering, setHovering] = useState(false)\n\n  const previousBrushExtent = usePrevious(brushExtent)\n\n  const brushed = useCallback(\n    (event: D3BrushEvent<unknown>) => {\n      const { type, selection, mode } = event\n\n      if (!selection) {\n        setLocalBrushExtent(null)\n        return\n      }\n\n      const scaled = (selection as [number, number]).map(xScale.invert) as [number, number]\n\n      // avoid infinite render loop by checking for change\n      if (type === 'end' && !compare(brushExtent, scaled, xScale)) {\n        setBrushExtent(scaled, mode)\n      }\n\n      setLocalBrushExtent(scaled)\n    },\n    [xScale, brushExtent, setBrushExtent]\n  )\n\n  // keep local and external brush extent in sync\n  // i.e. snap to ticks on bruhs end\n  useEffect(() => {\n    setLocalBrushExtent(brushExtent)\n  }, [brushExtent])\n\n  // initialize the brush\n  useEffect(() => {\n    if (!brushRef.current) return\n\n    brushBehavior.current = brushX<SVGGElement>()\n      .extent([\n        [Math.max(0 + BRUSH_EXTENT_MARGIN_PX, xScale(0)), 0],\n        [innerWidth - BRUSH_EXTENT_MARGIN_PX, innerHeight],\n      ])\n      .handleSize(30)\n      .filter(() => interactive)\n      .on('brush end', brushed)\n\n    brushBehavior.current(select(brushRef.current))\n\n    if (previousBrushExtent && compare(brushExtent, previousBrushExtent, xScale)) {\n      select(brushRef.current)\n        .transition()\n        .call(brushBehavior.current.move as any, brushExtent.map(xScale))\n    }\n\n    // brush linear gradient\n    select(brushRef.current)\n      .selectAll('.selection')\n      .attr('stroke', 'none')\n      .attr('fill-opacity', '0.1')\n      .attr('fill', `url(#${id}-gradient-selection)`)\n  }, [brushExtent, brushed, id, innerHeight, innerWidth, interactive, previousBrushExtent, xScale])\n\n  // respond to xScale changes only\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) return\n\n    brushBehavior.current.move(select(brushRef.current) as any, brushExtent.map(xScale) as any)\n  }, [brushExtent, xScale])\n\n  // show labels when local brush changes\n  useEffect(() => {\n    setShowLabels(true)\n    const timeout = setTimeout(() => setShowLabels(false), 1500)\n    return () => clearTimeout(timeout)\n  }, [localBrushExtent])\n\n  // variables to help render the SVGs\n  const flipWestHandle = localBrushExtent && xScale(localBrushExtent[0]) > FLIP_HANDLE_THRESHOLD_PX\n  const flipEastHandle = localBrushExtent && xScale(localBrushExtent[1]) > innerWidth - FLIP_HANDLE_THRESHOLD_PX\n\n  const showWestArrow = localBrushExtent && (xScale(localBrushExtent[0]) < 0 || xScale(localBrushExtent[1]) < 0)\n  const showEastArrow =\n    localBrushExtent && (xScale(localBrushExtent[0]) > innerWidth || xScale(localBrushExtent[1]) > innerWidth)\n\n  const westHandleInView =\n    localBrushExtent && xScale(localBrushExtent[0]) >= 0 && xScale(localBrushExtent[0]) <= innerWidth\n  const eastHandleInView =\n    localBrushExtent && xScale(localBrushExtent[1]) >= 0 && xScale(localBrushExtent[1]) <= innerWidth\n\n  return useMemo(\n    () => (\n      <>\n        <defs>\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\n            <stop stopColor={westHandleColor} />\n            <stop stopColor={eastHandleColor} offset=\"1\" />\n          </linearGradient>\n\n          {/* clips at exactly the svg area */}\n          <clipPath id={`${id}-brush-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={innerHeight} />\n          </clipPath>\n        </defs>\n\n        {/* will host the d3 brush */}\n        <g\n          ref={brushRef}\n          clipPath={`url(#${id}-brush-clip)`}\n          onMouseEnter={() => setHovering(true)}\n          onMouseLeave={() => setHovering(false)}\n        />\n\n        {/* custom brush handles */}\n        {localBrushExtent && (\n          <>\n            {/* west handle */}\n            {westHandleInView ? (\n              <g\n                transform={`translate(${Math.max(0, xScale(localBrushExtent[0]))}, 0), scale(${\n                  flipWestHandle ? '-1' : '1'\n                }, 1)`}\n              >\n                <g>\n                  <Handle color={westHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipWestHandle ? '1' : '-1'}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\n                  <Tooltip transform=\"scale(-1, 1)\" y=\"15\" dominantBaseline=\"middle\">\n                    {brushLabelValue('w', localBrushExtent[0])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {/* east handle */}\n            {eastHandleInView ? (\n              <g transform={`translate(${xScale(localBrushExtent[1])}, 0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}>\n                <g>\n                  <Handle color={eastHandleColor} d={brushHandlePath(innerHeight)} />\n                  <HandleAccent d={brushHandleAccentPath()} />\n                </g>\n\n                <LabelGroup\n                  transform={`translate(50,0), scale(${flipEastHandle ? '-1' : '1'}, 1)`}\n                  visible={showLabels || hovering}\n                >\n                  <TooltipBackground y=\"0\" x=\"-30\" height=\"30\" width=\"60\" rx=\"8\" />\n                  <Tooltip y=\"15\" dominantBaseline=\"middle\">\n                    {brushLabelValue('e', localBrushExtent[1])}\n                  </Tooltip>\n                </LabelGroup>\n              </g>\n            ) : null}\n\n            {showWestArrow && <OffScreenHandle color={westHandleColor} />}\n\n            {showEastArrow && (\n              <g transform={`translate(${innerWidth}, 0) scale(-1, 1)`}>\n                <OffScreenHandle color={eastHandleColor} />\n              </g>\n            )}\n          </>\n        )}\n      </>\n    ),\n    [\n      brushLabelValue,\n      eastHandleColor,\n      eastHandleInView,\n      flipEastHandle,\n      flipWestHandle,\n      hovering,\n      id,\n      innerHeight,\n      innerWidth,\n      localBrushExtent,\n      showEastArrow,\n      showLabels,\n      showWestArrow,\n      westHandleColor,\n      westHandleInView,\n      xScale,\n    ]\n  )\n}\n","import { ScaleLinear } from 'd3'\nimport { useMemo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledLine = styled.line`\n  opacity: 0.5;\n  stroke-width: 2;\n  stroke: ${({ theme }) => theme.neutral1};\n  fill: none;\n`\n\nexport const Line = ({\n  value,\n  xScale,\n  innerHeight,\n}: {\n  value: number\n  xScale: ScaleLinear<number, number>\n  innerHeight: number\n}) =>\n  useMemo(\n    () => <StyledLine x1={xScale(value)} y1=\"0\" x2={xScale(value)} y2={innerHeight} />,\n    [value, xScale, innerHeight]\n  )\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var RefreshCcw=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"1 4 1 10 7 10\"}),React.createElement(\"polyline\",{points:\"23 20 23 14 17 14\"}),React.createElement(\"path\",{d:\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"}))}));RefreshCcw.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},RefreshCcw.displayName=\"RefreshCcw\";export default RefreshCcw;","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ZoomIn=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"circle\",{cx:\"11\",cy:\"11\",r:\"8\"}),React.createElement(\"line\",{x1:\"21\",y1:\"21\",x2:\"16.65\",y2:\"16.65\"}),React.createElement(\"line\",{x1:\"11\",y1:\"8\",x2:\"11\",y2:\"14\"}),React.createElement(\"line\",{x1:\"8\",y1:\"11\",x2:\"14\",y2:\"11\"}))}));ZoomIn.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ZoomIn.displayName=\"ZoomIn\";export default ZoomIn;","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ZoomOut=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"circle\",{cx:\"11\",cy:\"11\",r:\"8\"}),React.createElement(\"line\",{x1:\"21\",y1:\"21\",x2:\"16.65\",y2:\"16.65\"}),React.createElement(\"line\",{x1:\"8\",y1:\"11\",x2:\"14\",y2:\"11\"}))}));ZoomOut.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ZoomOut.displayName=\"ZoomOut\";export default ZoomOut;","import { ButtonGray } from 'components/Button'\nimport { ScaleLinear, select, zoom, ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { RefreshCcw, ZoomIn, ZoomOut } from 'react-feather'\nimport styled from 'styled-components'\n\nimport { ZoomLevels } from './types'\n\nconst Wrapper = styled.div<{ count: number }>`\n  display: grid;\n  grid-template-columns: repeat(${({ count }) => count.toString()}, 1fr);\n  grid-gap: 6px;\n\n  position: absolute;\n  top: -32px;\n  right: 0;\n`\n\nconst Button = styled(ButtonGray)`\n  &:hover {\n    background-color: ${({ theme }) => theme.surface3};\n    color: ${({ theme }) => theme.neutral1};\n  }\n\n  width: 32px;\n  height: 32px;\n  padding: 4px;\n`\n\nexport const ZoomOverlay = styled.rect`\n  fill: transparent;\n  cursor: grab;\n\n  &:active {\n    cursor: grabbing;\n  }\n`\n\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  showResetButton,\n  zoomLevels,\n}: {\n  svg: SVGElement | null\n  xScale: ScaleLinear<number, number>\n  setZoom: (transform: ZoomTransform) => void\n  width: number\n  height: number\n  resetBrush: () => void\n  showResetButton: boolean\n  zoomLevels: ZoomLevels\n}) {\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>()\n\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\n    () => [\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 2),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n    ],\n    [svg]\n  )\n\n  useEffect(() => {\n    if (!svg) return\n\n    zoomBehavior.current = zoom()\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on('zoom', ({ transform }: { transform: ZoomTransform }) => setZoom(transform))\n\n    select(svg as Element).call(zoomBehavior.current)\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min])\n\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial()\n  }, [zoomInitial, zoomLevels])\n\n  return (\n    <Wrapper count={showResetButton ? 3 : 2}>\n      {showResetButton && (\n        <Button\n          onClick={() => {\n            resetBrush()\n            zoomReset()\n          }}\n          disabled={false}\n        >\n          <RefreshCcw size={16} />\n        </Button>\n      )}\n      <Button onClick={zoomIn} disabled={false}>\n        <ZoomIn size={16} />\n      </Button>\n      <Button onClick={zoomOut} disabled={false}>\n        <ZoomOut size={16} />\n      </Button>\n    </Wrapper>\n  )\n}\n","import { max, scaleLinear, ZoomTransform } from 'd3'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nimport { Area } from './Area'\nimport { AxisBottom } from './AxisBottom'\nimport { Brush } from './Brush'\nimport { Line } from './Line'\nimport { ChartEntry, LiquidityChartRangeInputProps } from './types'\nimport Zoom, { ZoomOverlay } from './Zoom'\n\nconst xAccessor = (d: ChartEntry) => d.price0\nconst yAccessor = (d: ChartEntry) => d.activeLiquidity\n\nexport function Chart({\n  id = 'liquidityChartRangeInput',\n  data: { series, current },\n  ticksAtLimit,\n  styles,\n  dimensions: { width, height },\n  margins,\n  interactive = true,\n  brushDomain,\n  brushLabels,\n  onBrushDomainChange,\n  zoomLevels,\n}: LiquidityChartRangeInputProps) {\n  const zoomRef = useRef<SVGRectElement | null>(null)\n\n  const [zoom, setZoom] = useState<ZoomTransform | null>(null)\n\n  const [innerHeight, innerWidth] = useMemo(\n    () => [height - margins.top - margins.bottom, width - margins.left - margins.right],\n    [width, height, margins]\n  )\n\n  const { xScale, yScale } = useMemo(() => {\n    const scales = {\n      xScale: scaleLinear()\n        .domain([current * zoomLevels.initialMin, current * zoomLevels.initialMax] as number[])\n        .range([0, innerWidth]),\n      yScale: scaleLinear()\n        .domain([0, max(series, yAccessor)] as number[])\n        .range([innerHeight, 0]),\n    }\n\n    if (zoom) {\n      const newXscale = zoom.rescaleX(scales.xScale)\n      scales.xScale.domain(newXscale.domain())\n    }\n\n    return scales\n  }, [current, zoomLevels.initialMin, zoomLevels.initialMax, innerWidth, series, innerHeight, zoom])\n\n  useEffect(() => {\n    // reset zoom as necessary\n    setZoom(null)\n  }, [zoomLevels])\n\n  useEffect(() => {\n    if (!brushDomain) {\n      onBrushDomainChange(xScale.domain() as [number, number], undefined)\n    }\n  }, [brushDomain, onBrushDomainChange, xScale])\n\n  return (\n    <>\n      <Zoom\n        svg={zoomRef.current}\n        xScale={xScale}\n        setZoom={setZoom}\n        width={innerWidth}\n        height={\n          // allow zooming inside the x-axis\n          height\n        }\n        resetBrush={() => {\n          onBrushDomainChange(\n            [current * zoomLevels.initialMin, current * zoomLevels.initialMax] as [number, number],\n            'reset'\n          )\n        }}\n        showResetButton={Boolean(ticksAtLimit[Bound.LOWER] || ticksAtLimit[Bound.UPPER])}\n        zoomLevels={zoomLevels}\n      />\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${width} ${height}`} style={{ overflow: 'visible' }}>\n        <defs>\n          <clipPath id={`${id}-chart-clip`}>\n            <rect x=\"0\" y=\"0\" width={innerWidth} height={height} />\n          </clipPath>\n\n          {brushDomain && (\n            // mask to highlight selected area\n            <mask id={`${id}-chart-area-mask`}>\n              <rect\n                fill=\"white\"\n                x={xScale(brushDomain[0])}\n                y=\"0\"\n                width={xScale(brushDomain[1]) - xScale(brushDomain[0])}\n                height={innerHeight}\n              />\n            </mask>\n          )}\n        </defs>\n\n        <g transform={`translate(${margins.left},${margins.top})`}>\n          <g clipPath={`url(#${id}-chart-clip)`}>\n            <Area series={series} xScale={xScale} yScale={yScale} xValue={xAccessor} yValue={yAccessor} />\n\n            {brushDomain && (\n              // duplicate area chart with mask for selected area\n              <g mask={`url(#${id}-chart-area-mask)`}>\n                <Area\n                  series={series}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xAccessor}\n                  yValue={yAccessor}\n                  fill={styles.area.selection}\n                />\n              </g>\n            )}\n\n            <Line value={current} xScale={xScale} innerHeight={innerHeight} />\n\n            <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n          </g>\n\n          <ZoomOverlay width={innerWidth} height={height} ref={zoomRef} />\n\n          <Brush\n            id={id}\n            xScale={xScale}\n            interactive={interactive}\n            brushLabelValue={brushLabels}\n            brushExtent={brushDomain ?? (xScale.domain() as [number, number])}\n            innerWidth={innerWidth}\n            innerHeight={innerHeight}\n            setBrushExtent={onBrushDomainChange}\n            westHandleColor={styles.brush.handle.west}\n            eastHandleColor={styles.brush.handle.east}\n          />\n        </g>\n      </svg>\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { useColor } from 'hooks/useColor'\nimport { saturate } from 'polished'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { BarChart2, CloudOff, Inbox } from 'react-feather'\nimport { batch } from 'react-redux'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { Chart } from './Chart'\nimport { useDensityChartData } from './hooks'\nimport { ZoomLevels } from './types'\n\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\n  [FeeAmount.LOWEST]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n}\n\nconst ChartWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  max-height: 200px;\n  justify-content: center;\n  align-content: center;\n`\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n  return (\n    <ColumnCenter style={{ height: '100%', justifyContent: 'center' }}>\n      {icon}\n      {message && (\n        <ThemedText.DeprecatedMediumHeader padding={10} marginTop=\"20px\" textAlign=\"center\">\n          {message}\n        </ThemedText.DeprecatedMediumHeader>\n      )}\n    </ColumnCenter>\n  )\n}\n\nexport default function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  feeAmount?: FeeAmount\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n  price?: number\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  interactive: boolean\n}) {\n  const theme = useTheme()\n\n  const tokenAColor = useColor(currencyA)\n  const tokenBColor = useColor(currencyB)\n\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped)\n\n  const { isLoading, error, formattedData } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount,\n  })\n\n  const onBrushDomainChangeEnded = useCallback(\n    (domain: [number, number], mode: string | undefined) => {\n      let leftRangeValue = Number(domain[0])\n      const rightRangeValue = Number(domain[1])\n\n      if (leftRangeValue <= 0) {\n        leftRangeValue = 1 / 10 ** 6\n      }\n\n      batch(() => {\n        // simulate user input for auto-formatting and other validations\n        if (\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === 'handle' || mode === 'reset') &&\n          leftRangeValue > 0\n        ) {\n          onLeftRangeInput(leftRangeValue.toFixed(6))\n        }\n\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === 'reset') && rightRangeValue > 0) {\n          // todo: remove this check. Upper bound for large numbers\n          // sometimes fails to parse to tick.\n          if (rightRangeValue < 1e35) {\n            onRightRangeInput(rightRangeValue.toFixed(6))\n          }\n        }\n      })\n    },\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]\n  )\n\n  interactive = interactive && Boolean(formattedData?.length)\n\n  const brushDomain: [number, number] | undefined = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n    return leftPrice && rightPrice\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\n      : undefined\n  }, [isSorted, priceLower, priceUpper])\n\n  const { formatDelta } = useFormatter()\n  const brushLabelValue = useCallback(\n    (d: 'w' | 'e', x: number) => {\n      if (!price) return ''\n\n      if (d === 'w' && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return '0'\n      if (d === 'e' && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return '∞'\n\n      const percent = (x < price ? -1 : 1) * ((Math.max(x, price) - Math.min(x, price)) / price) * 100\n\n      return price ? `${(Math.sign(percent) < 0 ? '-' : '') + formatDelta(percent)}` : ''\n    },\n    [formatDelta, isSorted, price, ticksAtLimit]\n  )\n\n  const isUninitialized = !currencyA || !currencyB || (formattedData === undefined && !isLoading)\n\n  return (\n    <AutoColumn gap=\"md\" style={{ minHeight: '200px' }}>\n      {isUninitialized ? (\n        <InfoBox\n          message={<Trans>Your position will appear here.</Trans>}\n          icon={<Inbox size={56} stroke={theme.neutral1} />}\n        />\n      ) : isLoading ? (\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.neutral2} />} />\n      ) : error ? (\n        <InfoBox\n          message={<Trans>Liquidity data not available.</Trans>}\n          icon={<CloudOff size={56} stroke={theme.neutral2} />}\n        />\n      ) : !formattedData || formattedData.length === 0 || !price ? (\n        <InfoBox\n          message={<Trans>There is no liquidity data.</Trans>}\n          icon={<BarChart2 size={56} stroke={theme.neutral2} />}\n        />\n      ) : (\n        <ChartWrapper>\n          <Chart\n            data={{ series: formattedData, current: price }}\n            dimensions={{ width: 560, height: 200 }}\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\n            styles={{\n              area: {\n                selection: theme.accent1,\n              },\n              brush: {\n                handle: {\n                  west: saturate(0.1, tokenAColor) ?? theme.critical,\n                  east: saturate(0.1, tokenBColor) ?? theme.accent1,\n                },\n              },\n            }}\n            interactive={interactive}\n            brushLabels={brushLabelValue}\n            brushDomain={brushDomain}\n            onBrushDomainChange={onBrushDomainChangeEnded}\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\n            ticksAtLimit={ticksAtLimit}\n          />\n        </ChartWrapper>\n      )}\n    </AutoColumn>\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport { useCallback, useMemo } from 'react'\n\nimport { ChartEntry } from './types'\n\nexport function useDensityChartData({\n  currencyA,\n  currencyB,\n  feeAmount,\n}: {\n  currencyA?: Currency\n  currencyB?: Currency\n  feeAmount?: FeeAmount\n}) {\n  const { isLoading, error, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\n\n  const formatData = useCallback(() => {\n    if (!data?.length) {\n      return undefined\n    }\n\n    const newData: ChartEntry[] = []\n\n    for (let i = 0; i < data.length; i++) {\n      const t: TickProcessed = data[i]\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        price0: parseFloat(t.price0),\n      }\n\n      if (chartEntry.activeLiquidity > 0) {\n        newData.push(chartEntry)\n      }\n    }\n\n    return newData\n  }, [data])\n\n  return useMemo(() => {\n    return {\n      isLoading,\n      error,\n      formattedData: !isLoading ? formatData() : undefined,\n    }\n  }, [isLoading, error, formatData])\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { Break } from 'components/earn/styled'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport RateToggle from 'components/RateToggle'\nimport { RowBetween, RowFixed } from 'components/Row'\nimport { BIPS_BASE } from 'constants/misc'\nimport JSBI from 'jsbi'\nimport { ReactNode, useCallback, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nexport const PositionPreview = ({\n  position,\n  title,\n  inRange,\n  baseCurrencyDefault,\n  ticksAtLimit,\n}: {\n  position: Position\n  title?: ReactNode\n  inRange: boolean\n  baseCurrencyDefault?: Currency\n  ticksAtLimit: { [bound: string]: boolean | undefined }\n}) => {\n  const theme = useTheme()\n  const { formatCurrencyAmount, formatDelta, formatPrice, formatTickPrice } = useFormatter()\n\n  const currency0 = unwrappedToken(position.pool.token0)\n  const currency1 = unwrappedToken(position.pool.token1)\n\n  // track which currency should be base\n  const [baseCurrency, setBaseCurrency] = useState(\n    baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n        ? currency1\n        : currency0\n      : currency0\n  )\n\n  const sorted = baseCurrency === currency0\n  const quoteCurrency = sorted ? currency1 : currency0\n\n  const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1)\n\n  const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert()\n  const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert()\n\n  const handleRateChange = useCallback(() => {\n    setBaseCurrency(quoteCurrency)\n  }, [quoteCurrency])\n\n  const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0))\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '0.5rem' }}>\n      <RowBetween style={{ marginBottom: '0.5rem' }}>\n        <RowFixed>\n          <DoubleCurrencyLogo\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n            size={24}\n            margin={true}\n          />\n          <ThemedText.DeprecatedLabel ml=\"10px\" fontSize=\"24px\">\n            {currency0?.symbol} / {currency1?.symbol}\n          </ThemedText.DeprecatedLabel>\n        </RowFixed>\n        <RangeBadge removed={removed} inRange={inRange} />\n      </RowBetween>\n\n      <LightCard>\n        <AutoColumn gap=\"md\">\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency0} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency0?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">\n                {formatCurrencyAmount({ amount: position.amount0 })}\n              </ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency1} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency1?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">\n                {formatCurrencyAmount({ amount: position.amount1 })}\n              </ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <Break />\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Fee tier</Trans>\n            </ThemedText.DeprecatedLabel>\n            <ThemedText.DeprecatedLabel>\n              <Trans>{formatDelta(position?.pool?.fee / BIPS_BASE)}</Trans>\n            </ThemedText.DeprecatedLabel>\n          </RowBetween>\n        </AutoColumn>\n      </LightCard>\n\n      <AutoColumn gap=\"md\">\n        <RowBetween>\n          {title ? <ThemedText.DeprecatedMain>{title}</ThemedText.DeprecatedMain> : <div />}\n          <RateToggle\n            currencyA={sorted ? currency0 : currency1}\n            currencyB={sorted ? currency1 : currency0}\n            handleRateToggle={handleRateChange}\n          />\n        </RowBetween>\n\n        <RowBetween>\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Min price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceLower,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.LOWER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {baseCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Max price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceUpper,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.UPPER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {quoteCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n        </RowBetween>\n        <LightCard padding=\"12px \">\n          <AutoColumn gap=\"4px\" justify=\"center\">\n            <ThemedText.DeprecatedMain fontSize=\"12px\">\n              <Trans>Current price</Trans>\n            </ThemedText.DeprecatedMain>\n            <ThemedText.DeprecatedMediumHeader>{`${formatPrice({\n              price,\n              type: NumberType.TokenTx,\n            })} `}</ThemedText.DeprecatedMediumHeader>\n            <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n              <Trans>\n                {quoteCurrency.symbol} per {baseCurrency.symbol}\n              </Trans>\n            </ThemedText.DeprecatedMain>\n          </AutoColumn>\n        </LightCard>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ButtonOutlined } from 'components/Button'\nimport { AutoRow } from 'components/Row'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst Button = styled(ButtonOutlined).attrs(() => ({\n  padding: '6px',\n  $borderRadius: '8px',\n}))`\n  color: ${({ theme }) => theme.neutral1};\n  flex: 1;\n`\n\ninterface PresetsButtonsProps {\n  onSetFullRange: () => void\n}\n\nexport default function PresetsButtons({ onSetFullRange }: PresetsButtonsProps) {\n  return (\n    <AutoRow gap=\"4px\" width=\"auto\">\n      <Button data-testid=\"set-full-range\" onClick={onSetFullRange}>\n        <ThemedText.DeprecatedBody fontSize={12}>\n          <Trans>Full range</Trans>\n        </ThemedText.DeprecatedBody>\n      </Button>\n    </AutoRow>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { toHex } from '@uniswap/v3-sdk'\nimport { Erc20Interface } from 'uniswap/src/abis/types/Erc20'\n\nconst ERC20_INTERFACE = new Interface([\n  {\n    constant: false,\n    inputs: [\n      { name: '_spender', type: 'address' },\n      { name: '_value', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]) as Erc20Interface\n\nexport default function approveAmountCalldata(\n  amount: CurrencyAmount<Currency>,\n  spender: string\n): { to: string; data: string; value: '0x0' } {\n  if (!amount.currency.isToken) throw new Error('Must call with an amount of token')\n  const approveData = ERC20_INTERFACE.encodeFunctionData('approve', [spender, toHex(amount.quotient)])\n  return {\n    to: amount.currency.address,\n    data: approveData,\n    value: '0x0',\n  }\n}\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport { AutoColumn } from 'components/Column'\nimport { PositionPreview } from 'components/PositionPreview'\nimport styled from 'styled-components'\n\nimport { Bound, Field } from '../../state/mint/v3/actions'\n\nconst Wrapper = styled.div`\n  padding-top: 12px;\n`\n\nexport function Review({\n  position,\n  outOfRange,\n  ticksAtLimit,\n}: {\n  position?: Position\n  existingPosition?: Position\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  priceLower?: Price<Currency, Currency>\n  priceUpper?: Price<Currency, Currency>\n  outOfRange: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"lg\">\n        {position ? (\n          <PositionPreview\n            position={position}\n            inRange={!outOfRange}\n            ticksAtLimit={ticksAtLimit}\n            title=\"Selected Range\"\n          />\n        ) : null}\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, Percent } from '@uniswap/sdk-core'\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { TraceEvent, sendAnalyticsEvent, useTrace } from 'analytics'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer/MiniPortfolio/hooks'\nimport OwnershipWarning from 'components/addLiquidity/OwnershipWarning'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { isSupportedChain } from 'constants/chains'\nimport usePrevious from 'hooks/usePrevious'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { BodyWrapper } from 'pages/AppBody'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport {\n  useRangeHopCallbacks,\n  useV3DerivedMintInfo,\n  useV3MintActionHandlers,\n  useV3MintState,\n} from 'state/mint/v3/hooks'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\nimport { WrongChainError } from 'utils/errors'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText } from '../../components/Button'\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport FeeSelector from '../../components/FeeSelector'\nimport HoverInlineText from '../../components/HoverInlineText'\nimport LiquidityChartRangeInput from '../../components/LiquidityChartRangeInput'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { PositionPreview } from '../../components/PositionPreview'\nimport RangeSelector from '../../components/RangeSelector'\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons'\nimport RateToggle from '../../components/RateToggle'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract'\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract'\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice'\nimport { useGetTransactionDeadline } from '../../hooks/useTransactionDeadline'\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions'\nimport { Bound, Field } from '../../state/mint/v3/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport approveAmountCalldata from '../../utils/approveAmountCalldata'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { Dots } from '../Pool/styled'\nimport { Review } from './Review'\nimport { DynamicSection, MediumOnly, ResponsiveTwoColumns, ScrollablePage, StyledInput, Wrapper } from './styled'\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nconst StyledBodyWrapper = styled(BodyWrapper)<{ $hasExistingPosition: boolean }>`\n  padding: ${({ $hasExistingPosition }) => ($hasExistingPosition ? '10px' : 0)};\n  max-width: 640px;\n`\n\nexport default function AddLiquidityWrapper() {\n  const { chainId } = useWeb3React()\n  if (isSupportedChain(chainId)) {\n    return <AddLiquidity />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nfunction AddLiquidity() {\n  const navigate = useNavigate()\n  const {\n    currencyIdA,\n    currencyIdB,\n    feeAmount: feeAmountFromUrl,\n    tokenId,\n  } = useParams<{\n    currencyIdA?: string\n    currencyIdB?: string\n    feeAmount?: string\n    tokenId?: string\n  }>()\n  const { account, chainId, provider } = useWeb3React()\n  const theme = useTheme()\n  const trace = useTrace()\n\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n\n  // check for existing position if tokenId in url\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : undefined\n  )\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails)\n\n  // fee selection from url\n  const feeAmount: FeeAmount | undefined =\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\n      ? parseFloat(feeAmountFromUrl)\n      : undefined\n\n  const baseCurrency = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  // prevent an error if they input ETH/WETH\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\n\n  // mint state\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState()\n\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  } = useV3DerivedMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    feeAmount,\n    baseCurrency ?? undefined,\n    existingPosition\n  )\n\n  const { formatPrice } = useFormatter()\n  const formattedPrice = formatPrice({\n    price: invertPrice ? price?.invert() : price,\n    type: NumberType.TokenTx,\n  })\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\n    useV3MintActionHandlers(noLiquidity)\n\n  const isValid = !errorMessage && !invalidRange\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const getDeadline = useGetTransactionDeadline() // custom from users settings\n\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const usdcValues = {\n    [Field.CURRENCY_A]: useStablecoinValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useStablecoinValue(parsedAmounts[Field.CURRENCY_B]),\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const argentWalletContract = useArgentWalletContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\n  )\n\n  async function onAdd() {\n    if (!chainId || !provider || !account) return\n\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return\n    }\n\n    const deadline = await getDeadline()\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\n      const { calldata, value } =\n        hasExistingPosition && tokenId\n          ? NonfungiblePositionManager.addCallParameters(position, {\n              tokenId,\n              slippageTolerance: allowedSlippage,\n              deadline: deadline.toString(),\n              useNative,\n            })\n          : NonfungiblePositionManager.addCallParameters(position, {\n              slippageTolerance: allowedSlippage,\n              recipient: account,\n              deadline: deadline.toString(),\n              useNative,\n              createPool: noLiquidity,\n            })\n\n      let txn: { to: string; data: string; value: string } = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n        data: calldata,\n        value,\n      }\n\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A]\n        const amountB = parsedAmounts[Field.CURRENCY_B]\n        const batch = [\n          ...(amountA && amountA.currency.isToken\n            ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          ...(amountB && amountB.currency.isToken\n            ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          {\n            to: txn.to,\n            data: txn.data,\n            value: txn.value,\n          },\n        ]\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch])\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: '0x0',\n        }\n      }\n\n      const connectedChainId = await provider.getSigner().getChainId()\n      if (chainId !== connectedChainId) throw new WrongChainError()\n\n      setAttemptingTxn(true)\n\n      provider\n        .getSigner()\n        .estimateGas(txn)\n        .then((estimate) => {\n          const newTxn = {\n            ...txn,\n            gasLimit: calculateGasMargin(estimate),\n          }\n\n          return provider\n            .getSigner()\n            .sendTransaction(newTxn)\n            .then((response: TransactionResponse) => {\n              setAttemptingTxn(false)\n              const transactionInfo: TransactionInfo = {\n                type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n                baseCurrencyId: currencyId(baseCurrency),\n                quoteCurrencyId: currencyId(quoteCurrency),\n                createPool: Boolean(noLiquidity),\n                expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? '0',\n                expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? '0',\n                feeAmount: position.pool.fee,\n              }\n              addTransaction(response, transactionInfo)\n              setTxHash(response.hash)\n              sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\n                label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\n                ...trace,\n                ...transactionInfo,\n              })\n            })\n        })\n        .catch((error) => {\n          console.error('Failed to send transaction', error)\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n        })\n    } else {\n      return\n    }\n  }\n\n  const handleCurrencySelect = useCallback(\n    (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\n      const currencyIdNew = currencyId(currencyNew)\n\n      if (currencyIdNew === currencyIdOther) {\n        // not ideal, but for now clobber the other if the currency ids are equal\n        return [currencyIdNew, undefined]\n      } else {\n        // prevent weth + eth\n        const isETHOrWETHNew =\n          currencyIdNew === 'ETH' ||\n          (chainId !== undefined && currencyIdNew === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n        const isETHOrWETHOther =\n          currencyIdOther !== undefined &&\n          (currencyIdOther === 'ETH' ||\n            (chainId !== undefined && currencyIdOther === WRAPPED_NATIVE_CURRENCY[chainId]?.address))\n\n        if (isETHOrWETHNew && isETHOrWETHOther) {\n          return [currencyIdNew, undefined]\n        } else {\n          return [currencyIdNew, currencyIdOther]\n        }\n      }\n    },\n    [chainId]\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyANew: Currency) => {\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB)\n      if (idB === undefined) {\n        navigate(`/add/${idA}`)\n      } else {\n        navigate(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdB, navigate]\n  )\n\n  const handleCurrencyBSelect = useCallback(\n    (currencyBNew: Currency) => {\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA)\n      if (idA === undefined) {\n        navigate(`/add/${idB}`)\n      } else {\n        navigate(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdA, navigate]\n  )\n\n  const handleFeePoolSelect = useCallback(\n    (newFeeAmount: FeeAmount) => {\n      onLeftRangeInput('')\n      onRightRangeInput('')\n      navigate(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`)\n    },\n    [currencyIdA, currencyIdB, navigate, onLeftRangeInput, onRightRangeInput]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      // dont jump to pool page if creating\n      navigate('/pools')\n    }\n    setTxHash('')\n  }, [navigate, onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const clearAll = useCallback(() => {\n    onFieldAInput('')\n    onFieldBInput('')\n    onLeftRangeInput('')\n    onRightRangeInput('')\n    navigate(`/add`)\n  }, [navigate, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput])\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeHopCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool)\n\n  // we need an existence check on parsed amounts for single-asset deposits\n  const showApprovalA =\n    !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\n  const showApprovalB =\n    !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\n\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\n  } ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''} ${\n    !depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''\n  }`\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const handleSetFullRange = useCallback(() => {\n    getSetFullRange()\n\n    const minPrice = pricesAtLimit[Bound.LOWER]\n    if (minPrice) searchParams.set('minPrice', minPrice.toSignificant(5))\n    const maxPrice = pricesAtLimit[Bound.UPPER]\n    if (maxPrice) searchParams.set('maxPrice', maxPrice.toSignificant(5))\n    setSearchParams(searchParams)\n  }, [getSetFullRange, pricesAtLimit, searchParams, setSearchParams])\n\n  // START: sync values with query string\n  const oldSearchParams = usePrevious(searchParams)\n  // use query string as an input to onInput handlers\n  useEffect(() => {\n    const minPrice = searchParams.get('minPrice')\n    const oldMinPrice = oldSearchParams?.get('minPrice')\n    if (\n      minPrice &&\n      typeof minPrice === 'string' &&\n      !isNaN(minPrice as any) &&\n      (!oldMinPrice || oldMinPrice !== minPrice)\n    ) {\n      onLeftRangeInput(minPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  useEffect(() => {\n    const maxPrice = searchParams.get('maxPrice')\n    const oldMaxPrice = oldSearchParams?.get('maxPrice')\n    if (\n      maxPrice &&\n      typeof maxPrice === 'string' &&\n      !isNaN(maxPrice as any) &&\n      (!oldMaxPrice || oldMaxPrice !== maxPrice)\n    ) {\n      onRightRangeInput(maxPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  // END: sync values with query string\n\n  const Buttons = () =>\n    addIsUnsupported ? (\n      <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding=\"12px\">\n        <ThemedText.DeprecatedMain mb=\"4px\">\n          <Trans>Unsupported Asset</Trans>\n        </ThemedText.DeprecatedMain>\n      </ButtonPrimary>\n    ) : !account ? (\n      <TraceEvent\n        events={[BrowserEvent.onClick]}\n        name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n        properties={{ received_swap_quote: false }}\n        element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n      >\n        <ButtonLight onClick={toggleWalletDrawer} $borderRadius=\"12px\" padding=\"12px\">\n          <Trans>Connect wallet</Trans>\n        </ButtonLight>\n      </TraceEvent>\n    ) : (\n      <AutoColumn gap=\"md\">\n        {(approvalA === ApprovalState.NOT_APPROVED ||\n          approvalA === ApprovalState.PENDING ||\n          approvalB === ApprovalState.NOT_APPROVED ||\n          approvalB === ApprovalState.PENDING) &&\n          isValid && (\n            <RowBetween>\n              {showApprovalA && (\n                <ButtonPrimary\n                  onClick={approveACallback}\n                  disabled={approvalA === ApprovalState.PENDING}\n                  width={showApprovalB ? '48%' : '100%'}\n                >\n                  {approvalA === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n              {showApprovalB && (\n                <ButtonPrimary\n                  onClick={approveBCallback}\n                  disabled={approvalB === ApprovalState.PENDING}\n                  width={showApprovalA ? '48%' : '100%'}\n                >\n                  {approvalB === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          )}\n        <ButtonError\n          onClick={() => {\n            setShowConfirm(true)\n          }}\n          disabled={\n            !isValid ||\n            (!argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\n            (!argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled)\n          }\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n        >\n          <Text fontWeight={535}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n        </ButtonError>\n      </AutoColumn>\n    )\n\n  const usdcValueCurrencyA = usdcValues[Field.CURRENCY_A]\n  const usdcValueCurrencyB = usdcValues[Field.CURRENCY_B]\n  const currencyAFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyA ? parseFloat(usdcValueCurrencyA.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyA]\n  )\n  const currencyBFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyB ? parseFloat(usdcValueCurrencyB.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyB]\n  )\n\n  const owner = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\n  const ownsNFT =\n    addressesAreEquivalent(owner, account) || addressesAreEquivalent(existingPositionDetails?.operator, account)\n  const showOwnershipWarning = Boolean(hasExistingPosition && account && !ownsNFT)\n\n  return (\n    <>\n      <ScrollablePage>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash}\n          reviewContent={() => (\n            <ConfirmationModalContent\n              title={<Trans>Add Liquidity</Trans>}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => (\n                <Review\n                  parsedAmounts={parsedAmounts}\n                  position={position}\n                  existingPosition={existingPosition}\n                  priceLower={priceLower}\n                  priceUpper={priceUpper}\n                  outOfRange={outOfRange}\n                  ticksAtLimit={ticksAtLimit}\n                />\n              )}\n              bottomContent={() => (\n                <ButtonPrimary style={{ marginTop: '1rem' }} onClick={onAdd}>\n                  <Text fontWeight={535} fontSize={20}>\n                    <Trans>Add</Trans>\n                  </Text>\n                </ButtonPrimary>\n              )}\n            />\n          )}\n          pendingText={pendingText}\n        />\n        <StyledBodyWrapper $hasExistingPosition={hasExistingPosition}>\n          <AddRemoveTabs\n            creating={false}\n            adding={true}\n            autoSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\n            showBackLink={!hasExistingPosition}\n          >\n            {!hasExistingPosition && (\n              <Row justify=\"flex-end\" style={{ width: 'fit-content', minWidth: 'fit-content' }}>\n                <MediumOnly>\n                  <ButtonText onClick={clearAll}>\n                    <ThemedText.DeprecatedBlue fontSize=\"12px\">\n                      <Trans>Clear all</Trans>\n                    </ThemedText.DeprecatedBlue>\n                  </ButtonText>\n                </MediumOnly>\n              </Row>\n            )}\n          </AddRemoveTabs>\n          <Wrapper>\n            <ResponsiveTwoColumns wide={!hasExistingPosition}>\n              <AutoColumn gap=\"lg\">\n                {!hasExistingPosition && (\n                  <>\n                    <AutoColumn gap=\"md\">\n                      <RowBetween paddingBottom=\"20px\">\n                        <ThemedText.DeprecatedLabel>\n                          <Trans>Select pair</Trans>\n                        </ThemedText.DeprecatedLabel>\n                      </RowBetween>\n                      <RowBetween gap=\"md\">\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          hideInput\n                          onMax={() => {\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                          }}\n                          onCurrencySelect={handleCurrencyASelect}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                          currency={currencies[Field.CURRENCY_A] ?? null}\n                          id=\"add-liquidity-input-tokena\"\n                        />\n\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_B]}\n                          hideInput\n                          onUserInput={onFieldBInput}\n                          onCurrencySelect={handleCurrencyBSelect}\n                          onMax={() => {\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                          }}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                          currency={currencies[Field.CURRENCY_B] ?? null}\n                          id=\"add-liquidity-input-tokenb\"\n                        />\n                      </RowBetween>\n\n                      <FeeSelector\n                        disabled={!quoteCurrency || !baseCurrency}\n                        feeAmount={feeAmount}\n                        handleFeePoolSelect={handleFeePoolSelect}\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={quoteCurrency ?? undefined}\n                      />\n                    </AutoColumn>{' '}\n                  </>\n                )}\n                {hasExistingPosition && existingPosition && (\n                  <PositionPreview\n                    position={existingPosition}\n                    title={<Trans>Selected range</Trans>}\n                    inRange={!outOfRange}\n                    ticksAtLimit={ticksAtLimit}\n                  />\n                )}\n              </AutoColumn>\n\n              {!hasExistingPosition && (\n                <>\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    <RowBetween>\n                      <ThemedText.DeprecatedLabel>\n                        <Trans>Set price range</Trans>\n                      </ThemedText.DeprecatedLabel>\n\n                      {Boolean(baseCurrency && quoteCurrency) && (\n                        <RowFixed gap=\"8px\">\n                          <PresetsButtons onSetFullRange={handleSetFullRange} />\n                          <RateToggle\n                            currencyA={baseCurrency as Currency}\n                            currencyB={quoteCurrency as Currency}\n                            handleRateToggle={() => {\n                              if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n                                onLeftRangeInput(\n                                  (invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onRightRangeInput(\n                                  (invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? '')\n                              }\n                              navigate(\n                                `/add/${currencyIdB as string}/${currencyIdA as string}${\n                                  feeAmount ? '/' + feeAmount : ''\n                                }`\n                              )\n                            }}\n                          />\n                        </RowFixed>\n                      )}\n                    </RowBetween>\n\n                    <RangeSelector\n                      priceLower={priceLower}\n                      priceUpper={priceUpper}\n                      getDecrementLower={getDecrementLower}\n                      getIncrementLower={getIncrementLower}\n                      getDecrementUpper={getDecrementUpper}\n                      getIncrementUpper={getIncrementUpper}\n                      onLeftRangeInput={onLeftRangeInput}\n                      onRightRangeInput={onRightRangeInput}\n                      currencyA={baseCurrency}\n                      currencyB={quoteCurrency}\n                      feeAmount={feeAmount}\n                      ticksAtLimit={ticksAtLimit}\n                    />\n\n                    {outOfRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>\n                              Your position will not earn fees or be used in trades until the market price moves into\n                              your range.\n                            </Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n\n                    {invalidRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n                  </DynamicSection>\n\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    {!noLiquidity ? (\n                      <>\n                        {Boolean(price && baseCurrency && quoteCurrency && !noLiquidity) && (\n                          <AutoColumn gap=\"2px\" style={{ marginTop: '0.5rem' }}>\n                            <Trans>\n                              <ThemedText.DeprecatedMain fontWeight={535} fontSize={12} color=\"text1\">\n                                Current price:\n                              </ThemedText.DeprecatedMain>\n                              <ThemedText.DeprecatedBody fontWeight={535} fontSize={20} color=\"text1\">\n                                {price && <HoverInlineText maxCharacters={20} text={formattedPrice} />}\n                              </ThemedText.DeprecatedBody>\n                              {baseCurrency && (\n                                <ThemedText.DeprecatedBody color=\"text2\" fontSize={12}>\n                                  {quoteCurrency?.symbol} per {baseCurrency.symbol}\n                                </ThemedText.DeprecatedBody>\n                              )}\n                            </Trans>\n                          </AutoColumn>\n                        )}\n                        <LiquidityChartRangeInput\n                          currencyA={baseCurrency ?? undefined}\n                          currencyB={quoteCurrency ?? undefined}\n                          feeAmount={feeAmount}\n                          ticksAtLimit={ticksAtLimit}\n                          price={\n                            price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined\n                          }\n                          priceLower={priceLower}\n                          priceUpper={priceUpper}\n                          onLeftRangeInput={onLeftRangeInput}\n                          onRightRangeInput={onRightRangeInput}\n                          interactive={!hasExistingPosition}\n                        />\n                      </>\n                    ) : (\n                      <AutoColumn gap=\"md\">\n                        {noLiquidity && (\n                          <BlueCard\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                              padding: '1rem 1rem',\n                            }}\n                          >\n                            <ThemedText.DeprecatedBody\n                              fontSize={14}\n                              style={{ fontWeight: 535 }}\n                              textAlign=\"left\"\n                              color={theme.accent1}\n                            >\n                              <Trans>\n                                This pool must be initialized before you can add liquidity. To initialize, select a\n                                starting price for the pool. Then, enter your liquidity price range and deposit amount.\n                                Gas fees will be higher than usual due to the initialization transaction.\n                              </Trans>\n                            </ThemedText.DeprecatedBody>\n                          </BlueCard>\n                        )}\n                        <OutlineCard padding=\"12px\">\n                          <StyledInput\n                            className=\"start-price-input\"\n                            value={startPriceTypedValue}\n                            onUserInput={onStartPriceInput}\n                          />\n                        </OutlineCard>\n                        <RowBetween\n                          style={{\n                            backgroundColor: theme.surface1,\n                            padding: '12px',\n                            borderRadius: '12px',\n                          }}\n                        >\n                          <ThemedText.DeprecatedMain>\n                            <Trans>Starting {baseCurrency?.symbol} Price:</Trans>\n                          </ThemedText.DeprecatedMain>\n                          <ThemedText.DeprecatedMain>\n                            {price ? (\n                              <ThemedText.DeprecatedMain>\n                                <RowFixed>\n                                  <HoverInlineText\n                                    maxCharacters={20}\n                                    text={invertPrice ? price?.invert()?.toSignificant(8) : price?.toSignificant(8)}\n                                  />{' '}\n                                  <span style={{ marginLeft: '4px' }}>\n                                    {quoteCurrency?.symbol} per {baseCurrency?.symbol}\n                                  </span>\n                                </RowFixed>\n                              </ThemedText.DeprecatedMain>\n                            ) : (\n                              '-'\n                            )}\n                          </ThemedText.DeprecatedMain>\n                        </RowBetween>\n                      </AutoColumn>\n                    )}\n                  </DynamicSection>\n                </>\n              )}\n              <div>\n                <DynamicSection disabled={invalidPool || invalidRange || (noLiquidity && !startPriceTypedValue)}>\n                  <AutoColumn gap=\"md\">\n                    <ThemedText.DeprecatedLabel>\n                      {hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit amounts</Trans>}\n                    </ThemedText.DeprecatedLabel>\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_A]}\n                      onUserInput={onFieldAInput}\n                      onMax={() => {\n                        onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                      currency={currencies[Field.CURRENCY_A] ?? null}\n                      id=\"add-liquidity-input-tokena\"\n                      fiatValue={currencyAFiat}\n                      locked={depositADisabled}\n                    />\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_B]}\n                      onUserInput={onFieldBInput}\n                      onMax={() => {\n                        onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                      fiatValue={currencyBFiat}\n                      currency={currencies[Field.CURRENCY_B] ?? null}\n                      id=\"add-liquidity-input-tokenb\"\n                      locked={depositBDisabled}\n                    />\n                  </AutoColumn>\n                </DynamicSection>\n              </div>\n              <Buttons />\n            </ResponsiveTwoColumns>\n          </Wrapper>\n        </StyledBodyWrapper>\n        {showOwnershipWarning && <OwnershipWarning ownerAddress={owner} />}\n        {addIsUnsupported && (\n          <UnsupportedCurrencyFooter\n            show={addIsUnsupported}\n            currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n          />\n        )}\n      </ScrollablePage>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n","import { Pool, Position } from '@uniswap/v3-sdk'\nimport { usePool } from 'hooks/usePools'\nimport { PositionDetails } from 'types/position'\n\nimport { useCurrency } from './Tokens'\n\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\n  position?: Position\n  pool?: Pool\n} {\n  const currency0 = useCurrency(positionDetails?.token0)\n  const currency1 = useCurrency(positionDetails?.token1)\n\n  // construct pool data\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\n\n  let position = undefined\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper,\n    })\n  }\n\n  return {\n    position,\n    pool: pool ?? undefined,\n  }\n}\n","import { useWeb3React } from '@web3-react/core'\nimport ArgentWalletContractABI from 'uniswap/src/abis/argent-wallet-contract.json'\nimport { ArgentWalletContract } from 'uniswap/src/abis/types'\n\nimport { useContract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport function useArgentWalletContract(): ArgentWalletContract | null {\n  const { account } = useWeb3React()\n  const isArgentWallet = useIsArgentWallet()\n  return useContract(\n    isArgentWallet ? account ?? undefined : undefined,\n    ArgentWalletContractABI,\n    true\n  ) as ArgentWalletContract\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport AddLiquidity from './index'\n\nexport default function AddLiquidityWithTokenRedirects() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string; feeAmount?: string }>()\n\n  const { chainId } = useWeb3React()\n\n  // prevent weth + eth\n  const isETHOrWETHA =\n    currencyIdA === 'ETH' || (chainId !== undefined && currencyIdA === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n  const isETHOrWETHB =\n    currencyIdB === 'ETH' || (chainId !== undefined && currencyIdB === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n\n  if (\n    currencyIdA &&\n    currencyIdB &&\n    (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || (isETHOrWETHA && isETHOrWETHB))\n  ) {\n    return <Navigate to={`/add/${currencyIdA}`} replace />\n  }\n  return <AddLiquidity />\n}\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\n  if (!a || !b) return false\n  return a === b || a.toLowerCase() === b.toLowerCase()\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Inbox","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","propTypes","displayName","InputPanel","styled","div","flexColumnNoWrap","hideInput","theme","surface2","Container","surface3","disabled","CurrencySelect","ButtonGray","selected","surface1","accent1","deprecated_shallowShadow","neutral1","white","darken","visible","pointerEvents","InputRow","flexRowNoWrap","LabelRow","neutral2","FiatRow","Aligner","span","StyledDropDown","DropDown","StyledTokenName","active","BREAKPOINTS","sm","StyledBalanceMax","button","accent2","StyledNumericalInput","NumericalInput","loadingOpacityMixin","StyledPrefetchBalancesWrapper","PrefetchBalancesWrapper","$fullWidth","CurrencyInputPanel","value","onUserInput","onMax","showMaxButton","onCurrencySelect","currency","otherCurrency","id","currencySearchFilters","showCurrencyAmount","renderBalance","fiatValue","hideBalance","pair","locked","loading","modalOpen","setModalOpen","useState","account","chainId","useWeb3React","selectedCurrencyBalance","useCurrencyBalance","undefined","useTheme","formatCurrencyAmount","useFormatter","handleDismissSearch","useCallback","chainAllowed","isSupportedChain","style","padding","borderRadius","className","$loading","maxDecimals","decimals","shouldFetchOnAccountUpdate","onClick","RowFixed","marginRight","DoubleCurrencyLogo","currency0","token0","currency1","token1","margin","CurrencyLogo","symbol","Boolean","slice","RowBetween","LoadingOpacityContainer","FiatValue","ThemedText","DeprecatedBody","neutral3","fontWeight","fontSize","display","cursor","amount","type","NumberType","TokenNonTx","TraceEvent","events","BrowserEvent","name","SwapEventName","SWAP_MAX_TOKEN_AMOUNT_SELECTED","element","InterfaceElementName","MAX_TOKEN_AMOUNT_BUTTON","CurrencySearchModal","isOpen","onDismiss","selectedCurrency","otherSelectedCurrency","Tabs","StyledLink","Link","flex","deprecated_mediaWidth","deprecated_upToMedium","FindPoolTabsText","H1Small","StyledArrowLeft","ArrowLeft","FindPoolTabs","origin","position","to","AddRemoveTitleText","$center","AddRemoveTabs","adding","creating","autoSlippage","children","dispatch","useAppDispatch","navigate","useNavigate","align","e","preventDefault","resetMintState","resetMintV3State","Box","SettingsTab","hideRoutingSettings","DataCard","AutoColumn","CardBGImage","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","Break","DetailsFooter","Z_INDEX","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","DeprecatedBlue","deprecated_upToSmall","UnsupportedCurrencyFooter","currencies","showDetails","setShowDetails","tokens","map","wrapped","unsupportedTokens","useUnsupportedTokens","Modal","Card","gap","DeprecatedMediumHeader","CloseIcon","data-testid","token","includes","address","OutlineCard","AutoRow","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","concat","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","tick","Number","sdkPrice","tickToPrice","currentTickProcessed","liquidityActive","liquidityNet","JSBI","price0","toFixed","push","reverse","getActiveTick","tickCurrent","feeAmount","Math","floor","TICK_SPACINGS","MAX_THE_GRAPH_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","data","skipNumber","setSkipNumber","subgraphTickData","setSubgraphTickData","error","isLoading","skip","poolAddress","apolloClient","chainToApolloClient","Pool","getAddress","V3_CORE_FACTORY_ADDRESSES","useAllV3TicksQuery","variables","toLowerCase","pollInterval","ms","client","useTicksFromSubgraph","useEffect","ticks","tickData","usePoolActiveLiquidity","pool","defaultChainId","ChainId","MAINNET","usePoolMultichain","liquidity","sqrtPriceX96","sqrtRatioX96","currentTick","activeTick","useMemo","PoolState","EXISTS","LOADING","findIndex","console","subsequentTicks","ticksProcessed","ExplainerText","TitleRow","deprecated_accentWarning","Wrapper","deprecated_accentWarningSoft","ownerAddress","AlertTriangle","SubHeader","CloudOff","x1","y1","x2","y2","BarChart2","Path","path","Area","series","xScale","yScale","xValue","yValue","area","curve","curveStepAfter","x","y0","filter","window","innerWidth","StyledGroup","g","Axis","axisGenerator","axis","select","remove","AxisBottom","innerHeight","offset","transform","axisBottom","brushHandlePath","join","brushHandleAccentPath","OffScreenHandle","polygon","Handle","HandleAccent","opacity","hover","LabelGroup","TooltipBackground","rect","Tooltip","text","compare","a","b","aNorm","bNorm","every","v","Brush","interactive","brushLabelValue","brushExtent","setBrushExtent","westHandleColor","eastHandleColor","brushRef","useRef","brushBehavior","localBrushExtent","setLocalBrushExtent","showLabels","setShowLabels","hovering","setHovering","previousBrushExtent","usePrevious","brushed","event","selection","mode","scaled","invert","current","brushX","extent","max","handleSize","on","transition","move","selectAll","attr","timeout","setTimeout","clearTimeout","flipWestHandle","flipEastHandle","showWestArrow","showEastArrow","westHandleInView","eastHandleInView","defs","linearGradient","stop","stopColor","clipPath","y","onMouseEnter","onMouseLeave","rx","dominantBaseline","StyledLine","line","Line","RefreshCcw","ZoomIn","cx","cy","r","ZoomOut","count","toString","Button","ZoomOverlay","Zoom","svg","setZoom","resetBrush","showResetButton","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","scaleBy","scaleTo","zoomIdentity","translate","scale","zoom","scaleExtent","min","xAccessor","yAccessor","activeLiquidity","Chart","ticksAtLimit","styles","dimensions","margins","brushDomain","brushLabels","onBrushDomainChange","zoomRef","top","bottom","left","right","scales","scaleLinear","domain","initialMin","initialMax","range","newXscale","rescaleX","Bound","LOWER","UPPER","overflow","mask","brush","handle","west","east","ZOOM_LEVELS","FeeAmount","LOWEST","LOW","MEDIUM","HIGH","ChartWrapper","InfoBox","message","icon","ColumnCenter","justifyContent","marginTop","textAlign","LiquidityChartRangeInput","price","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","formattedData","tokenAColor","useColor","tokenBColor","isSorted","sortsBefore","formatData","newData","t","chartEntry","parseFloat","useDensityChartData","onBrushDomainChangeEnded","leftRangeValue","rightRangeValue","batch","leftPrice","rightPrice","toSignificant","formatDelta","percent","sign","isUninitialized","minHeight","Loader","saturate","critical","PositionPreview","title","inRange","baseCurrencyDefault","baseCurrency","quoteCurrency","formatPrice","formatTickPrice","unwrappedToken","setBaseCurrency","sorted","priceOf","token0PriceLower","token0PriceUpper","handleRateChange","removed","marginBottom","DeprecatedLabel","ml","RangeBadge","LightCard","mr","amount0","amount1","fee","BIPS_BASE","DeprecatedMain","RateToggle","handleRateToggle","justify","atLimit","direction","DeprecatedSmall","TokenTx","ButtonOutlined","attrs","$borderRadius","PresetsButtons","onSetFullRange","ERC20_INTERFACE","Interface","constant","inputs","outputs","payable","stateMutability","approveAmountCalldata","spender","isToken","Error","approveData","encodeFunctionData","toHex","quotient","Review","outOfRange","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","StyledBodyWrapper","BodyWrapper","$hasExistingPosition","AddLiquidityWrapper","AddLiquidity","PositionPageUnsupportedContent","parsedAmounts","useSingleCallResult","existingPositionDetails","currencyIdA","currencyIdB","feeAmountFromUrl","tokenId","useParams","provider","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","positionLoading","useV3PositionFromTokenId","BigNumber","from","hasExistingPosition","existingPosition","positionDetails","useCurrency","usePool","Position","tickLower","tickUpper","useDerivedPositionInfo","values","equals","independentField","typedValue","startPriceTypedValue","useV3MintState","dependentField","pricesAtTicks","pricesAtLimit","currencyBalances","noLiquidity","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","invertPrice","useV3DerivedMintInfo","formattedPrice","onFieldAInput","onFieldBInput","onStartPriceInput","useV3MintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","getDeadline","useGetTransactionDeadline","txHash","setTxHash","formattedAmounts","usdcValues","Field","CURRENCY_A","useStablecoinValue","CURRENCY_B","maxAmounts","reduce","accumulator","field","maxAmountSpend","atMaxAmounts","equalTo","argentWalletContract","isArgentWallet","useIsArgentWallet","useContract","ArgentWalletContractABI","useArgentWalletContract","approvalA","approveACallback","useApproveCallback","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","onAdd","deadline","useNative","isNative","calldata","NonfungiblePositionManager","addCallParameters","slippageTolerance","recipient","createPool","txn","amountA","amountB","interface","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","transactionInfo","TransactionType","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","label","catch","code","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","WRAPPED_NATIVE_CURRENCY","isETHOrWETHNew","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","handleCurrencyBSelect","currencyBNew","handleFeePoolSelect","newFeeAmount","handleDismissConfirmation","addIsUnsupported","useIsSwapUnsupported","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeHopCallbacks","showApprovalA","ApprovalState","APPROVED","showApprovalB","pendingText","searchParams","setSearchParams","useSearchParams","handleSetFullRange","minPrice","set","maxPrice","oldSearchParams","get","oldMinPrice","isNaN","oldMaxPrice","Buttons","ButtonPrimary","mb","NOT_APPROVED","PENDING","Dots","ButtonError","Text","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","CONNECT_WALLET_BUTTON","ButtonLight","usdcValueCurrencyA","usdcValueCurrencyB","currencyAFiat","currencyBFiat","owner","result","ownsNFT","addressesAreEquivalent","operator","showOwnershipWarning","ScrollablePage","TransactionConfirmationModal","reviewContent","ConfirmationModalContent","topContent","bottomContent","showBackLink","Row","minWidth","MediumOnly","ButtonText","ResponsiveTwoColumns","wide","paddingBottom","toExact","FeeSelector","DynamicSection","RangeSelector","YellowCard","deprecated_yellow3","DeprecatedYellow","BlueCard","flexDirection","alignItems","StyledInput","backgroundColor","HoverInlineText","maxCharacters","marginLeft","OwnershipWarning","SwitchLocaleLink","AddLiquidityWithTokenRedirects","isETHOrWETHA","isETHOrWETHB","Navigate","replace","formattedChainId","asSupportedChain","nativeOnChain"],"sourceRoot":""}