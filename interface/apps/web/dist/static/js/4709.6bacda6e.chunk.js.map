{"version":3,"file":"static/js/4709.6bacda6e.chunk.js","mappings":"uMAAwK,MAAMA,UAAwB,EAAAC,iBAAiB,WAAAC,CAAYC,GAAYC,MAAMD,GAAYE,KAAKC,OAAO,IAAI,EAAAC,aAAaF,KAAKG,6BAA4B,EAAGH,KAAKF,WAAWE,KAAKI,cAAcN,GAAYE,KAAKF,WAAWO,WAAWL,KAAKM,wBAAwB,CAAC,aAAMC,CAAQT,EAAWE,KAAKF,kBAAkBE,KAAKQ,KAAKV,EAAW,CAAC,gBAAMW,SAAmBT,KAAKU,OAAO,CAAC,EAAAC,CAAGC,EAAMC,GAAUb,KAAKC,OAAOU,GAAGC,EAAMC,EAAS,CAAC,IAAAC,CAAKF,EAAMC,GAAUb,KAAKC,OAAOa,KAAKF,EAAMC,EAAS,CAAC,GAAAE,CAAIH,EAAMC,GAAUb,KAAKC,OAAOc,IAAIH,EAAMC,EAAS,CAAC,cAAAG,CAAeJ,EAAMC,GAAUb,KAAKC,OAAOe,eAAeJ,EAAMC,EAAS,CAAC,aAAMI,CAAQA,EAAQC,GAAS,OAAOlB,KAAKmB,eAAc,IAAAC,sBAAqBH,EAAQI,OAAOJ,EAAQK,QAAQ,GAAGL,EAAQM,KAAI,IAAAC,kBAAiBC,YAAYP,EAAQ,CAAC,mBAAMC,CAAcF,EAAQC,GAAS,OAAO,IAAIQ,SAAQ,MAAOC,EAAQC,KAAU,IAAI5B,KAAKF,WAAWO,UAAU,UAAUL,KAAKQ,MAAM,CAAC,MAAMqB,GAAGD,EAAOC,EAAE,CAAC7B,KAAKC,OAAOU,GAAG,GAAGM,EAAQM,MAAMO,KAAW,IAAAC,gBAAeD,GAAUF,EAAOE,EAASE,OAAOL,EAAQG,EAASG,OAAQ,IAAG,UAAUjC,KAAKF,WAAWoC,KAAKjB,EAAQC,EAAQ,CAAC,MAAMW,GAAGD,EAAOC,EAAE,CAAE,GAAE,CAAC,aAAAzB,CAAcN,EAAWE,KAAKF,YAAY,OAAOA,CAAU,CAAC,SAAAqC,CAAUC,GAASpC,KAAKC,OAAOoC,KAAK,UAAUD,IAAS,IAAAE,mBAAkBF,GAASpC,KAAKC,OAAOoC,KAAK,GAAGD,EAAQb,KAAKa,GAASpC,KAAKC,OAAOoC,KAAK,UAAU,CAACE,KAAKH,EAAQf,OAAOmB,KAAKJ,EAAQd,QAAQ,CAAC,OAAAmB,CAAQ7B,GAAOA,GAAO,MAAMA,EAAM8B,MAAM1C,KAAKC,OAAOoC,KAAK,QAAQ,IAAIM,MAAM,qDAAqD/B,EAAM8B,QAAQ9B,EAAMgC,OAAO,IAAIhC,EAAMgC,UAAU,OAAO5C,KAAKC,OAAOoC,KAAK,aAAa,CAAC,UAAM7B,CAAKV,EAAWE,KAAKF,YAAYE,KAAKF,aAAaA,GAAYE,KAAKF,WAAWO,YAAYL,KAAKF,WAAWO,WAAWL,KAAKU,QAAQ,iBAAiBZ,UAAmBE,KAAKF,WAAWU,KAAKV,GAAYA,EAAWE,KAAKF,YAAYE,KAAKF,WAAWE,KAAKI,cAAcN,SAAkBE,KAAKF,WAAWU,OAAOR,KAAKM,yBAAyBN,KAAKC,OAAOoC,KAAK,WAAW,CAAC,WAAM3B,SAAcV,KAAKF,WAAWY,OAAO,CAAC,sBAAAJ,GAAyBN,KAAKG,8BAA8BH,KAAKF,WAAWa,GAAG,WAAWyB,GAASpC,KAAKmC,UAAUC,KAAWpC,KAAKF,WAAWa,GAAG,SAASC,GAAOZ,KAAKyC,QAAQ7B,KAASZ,KAAKF,WAAWa,GAAG,SAASqB,GAAOhC,KAAKC,OAAOoC,KAAK,QAAQL,KAAShC,KAAKF,WAAWa,GAAG,kBAAkBqB,GAAOhC,KAAKyC,YAAYzC,KAAKG,6BAA4B,EAAG,EAAE,MCAz4E,EDAy4E,C","sources":["../../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js","../../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js"],"sourcesContent":["import{EventEmitter}from\"events\";import{IJsonRpcProvider,isJsonRpcResponse,formatJsonRpcRequest,isJsonRpcError,getBigIntRpcId}from\"@walletconnect/jsonrpc-utils\";export class JsonRpcProvider extends IJsonRpcProvider{constructor(connection){super(connection),this.events=new EventEmitter,this.hasRegisteredEventListeners=!1,this.connection=this.setConnection(connection),this.connection.connected&&this.registerEventListeners()}async connect(connection=this.connection){await this.open(connection)}async disconnect(){await this.close()}on(event,listener){this.events.on(event,listener)}once(event,listener){this.events.once(event,listener)}off(event,listener){this.events.off(event,listener)}removeListener(event,listener){this.events.removeListener(event,listener)}async request(request,context){return this.requestStrict(formatJsonRpcRequest(request.method,request.params||[],request.id||getBigIntRpcId().toString()),context)}async requestStrict(request,context){return new Promise((async(resolve,reject)=>{if(!this.connection.connected)try{await this.open()}catch(e){reject(e)}this.events.on(`${request.id}`,(response=>{isJsonRpcError(response)?reject(response.error):resolve(response.result)}));try{await this.connection.send(request,context)}catch(e){reject(e)}}))}setConnection(connection=this.connection){return connection}onPayload(payload){this.events.emit(\"payload\",payload),isJsonRpcResponse(payload)?this.events.emit(`${payload.id}`,payload):this.events.emit(\"message\",{type:payload.method,data:payload.params})}onClose(event){event&&3e3===event.code&&this.events.emit(\"error\",new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason?`(${event.reason})`:\"\"}`)),this.events.emit(\"disconnect\")}async open(connection=this.connection){this.connection===connection&&this.connection.connected||(this.connection.connected&&this.close(),\"string\"==typeof connection&&(await this.connection.open(connection),connection=this.connection),this.connection=this.setConnection(connection),await this.connection.open(),this.registerEventListeners(),this.events.emit(\"connect\"))}async close(){await this.connection.close()}registerEventListeners(){this.hasRegisteredEventListeners||(this.connection.on(\"payload\",(payload=>this.onPayload(payload))),this.connection.on(\"close\",(event=>this.onClose(event))),this.connection.on(\"error\",(error=>this.events.emit(\"error\",error))),this.connection.on(\"register_error\",(error=>this.onClose())),this.hasRegisteredEventListeners=!0)}}export default JsonRpcProvider;","import Provider from\"./provider\";export*from\"./provider\";export default Provider;"],"names":["JsonRpcProvider","IJsonRpcProvider","constructor","connection","super","this","events","EventEmitter","hasRegisteredEventListeners","setConnection","connected","registerEventListeners","connect","open","disconnect","close","on","event","listener","once","off","removeListener","request","context","requestStrict","formatJsonRpcRequest","method","params","id","getBigIntRpcId","toString","Promise","resolve","reject","e","response","isJsonRpcError","error","result","send","onPayload","payload","emit","isJsonRpcResponse","type","data","onClose","code","Error","reason"],"sourceRoot":""}