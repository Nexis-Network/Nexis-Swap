{"version":3,"file":"static/js/9469.8ef33abd.chunk.js","mappings":"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","sources":["components/Slider/index.tsx","hooks/useDebouncedChangeHandler.tsx","hooks/useIsArgentWallet.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","state/burn/hooks.tsx","pages/RemoveLiquidity/index.tsx"],"sourcesContent":["import { ChangeEvent, useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: ${({ theme }) => theme.accent1};\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.surface4};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.surface4};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.surface2};\n  }\n`\n\ninterface InputSliderProps {\n  value: number\n  onChange: (value: number) => void\n  step?: number\n  min?: number\n  max?: number\n  size?: number\n}\n\nexport default function Slider({\n  value,\n  onChange,\n  min = 0,\n  step = 1,\n  max = 100,\n  size = 28,\n  ...rest\n}: InputSliderProps) {\n  const changeCallback = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(parseInt(e.target.value))\n    },\n    [onChange]\n  )\n\n  return (\n    <StyledRangeInput\n      size={size}\n      {...rest}\n      type=\"range\"\n      value={value}\n      style={{ padding: '15px 0' }}\n      onChange={changeCallback}\n      aria-labelledby=\"input slider\"\n      step={step}\n      min={min}\n      max={max}\n    />\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange]\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useArgentWalletDetectorContract } from './useContract'\n\nexport default function useIsArgentWallet(): boolean {\n  const { account } = useWeb3React()\n  const argentWalletDetector = useArgentWalletDetectorContract()\n  const inputs = useMemo(() => [account ?? undefined], [account])\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\n  return Boolean(call?.result?.[0])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo, useState } from 'react'\n\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\nimport { useEIP2612Contract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport enum PermitType {\n  AMOUNT = 1,\n  ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\nexport interface PermitInfo {\n  type: PermitType\n  name: string\n  // version is optional, and if omitted, will not be included in the domain\n  version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n  [chainId: number]: {\n    [checksummedTokenAddress: string]: PermitInfo\n  }\n} = {\n  [ChainId.MAINNET]: {\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.GOERLI]: {\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.SEPOLIA]: {\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n}\n\nenum UseERC20PermitState {\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n  NOT_APPLICABLE,\n  LOADING,\n  NOT_SIGNED,\n  SIGNED,\n}\n\ninterface BaseSignatureData {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n}\n\ninterface StandardSignatureData extends BaseSignatureData {\n  amount: string\n}\n\ninterface AllowedSignatureData extends BaseSignatureData {\n  allowed: true\n}\n\ntype SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n]\n\nexport function useERC20Permit(\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\n  spender: string | null | undefined,\n  transactionDeadline: BigNumber | undefined,\n  overridePermitInfo: PermitInfo | undefined | null\n): {\n  signatureData: SignatureData | null\n  state: UseERC20PermitState\n  gatherPermitSignature: null | (() => Promise<void>)\n} {\n  const { account, chainId, provider } = useWeb3React()\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\n  const isArgentWallet = useIsArgentWallet()\n  const nonceInputs = useMemo(() => [account ?? undefined], [account])\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n  const permitInfo =\n    overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\n\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n  return useMemo(() => {\n    if (\n      isArgentWallet ||\n      !currencyAmount ||\n      !eip2612Contract ||\n      !account ||\n      !chainId ||\n      !transactionDeadline ||\n      !provider ||\n      !tokenNonceState.valid ||\n      !tokenAddress ||\n      !spender ||\n      !permitInfo\n    ) {\n      return {\n        state: UseERC20PermitState.NOT_APPLICABLE,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n      return {\n        state: UseERC20PermitState.LOADING,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const isSignatureDataValid =\n      signatureData &&\n      signatureData.owner === account &&\n      signatureData.deadline >= transactionDeadline.toNumber() &&\n      signatureData.tokenAddress === tokenAddress &&\n      signatureData.nonce === nonceNumber &&\n      signatureData.spender === spender &&\n      ('allowed' in signatureData ||\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n    return {\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === PermitType.ALLOWED\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n        const value = currencyAmount.quotient.toString()\n\n        const message = allowed\n          ? {\n              holder: account,\n              spender,\n              allowed,\n              nonce: nonceNumber,\n              expiry: signatureDeadline,\n            }\n          : {\n              owner: account,\n              spender,\n              value,\n              nonce: nonceNumber,\n              deadline: signatureDeadline,\n            }\n        const domain = permitInfo.version\n          ? {\n              name: permitInfo.name,\n              version: permitInfo.version,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n          : {\n              name: permitInfo.name,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n          },\n          domain,\n          primaryType: 'Permit',\n          message,\n        })\n\n        return provider\n          .send('eth_signTypedData_v4', [account, data])\n          .then(splitSignature)\n          .then((signature) => {\n            setSignatureData({\n              v: signature.v,\n              r: signature.r,\n              s: signature.s,\n              deadline: signatureDeadline,\n              ...(allowed ? { allowed } : { amount: value }),\n              nonce: nonceNumber,\n              chainId,\n              owner: account,\n              spender,\n              tokenAddress,\n              permitType: permitInfo.type,\n            })\n          })\n      },\n    }\n  }, [\n    currencyAmount,\n    eip2612Contract,\n    account,\n    chainId,\n    isArgentWallet,\n    transactionDeadline,\n    provider,\n    tokenNonceState.loading,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData,\n  ])\n}\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\n\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n  version: '1',\n  name: 'Uniswap V2',\n  type: PermitType.AMOUNT,\n}\n\nexport function useV2LiquidityTokenPermit(\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\n  spender: string | null | undefined\n) {\n  const transactionDeadline = useTransactionDeadline()\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { AppState } from 'state/reducer'\n\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useV2Pair } from '../../hooks/useV2Pairs'\nimport { useTokenBalances } from '../connection/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useAppSelector((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  }\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = useV2Pair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: CurrencyAmount<Token>; [Field.CURRENCY_B]?: CurrencyAmount<Token> } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\n      }\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? CurrencyAmount.fromRawAmount(\n            userLiquidity.currency,\n            percentToRemove.multiply(userLiquidity.quotient).quotient\n          )\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\n        : undefined,\n  }\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect wallet</Trans>\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { BrowserEvent, InterfaceElementName, InterfaceEventName, LiquidityEventName } from '@uniswap/analytics-events'\nimport { Currency, Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, TraceEvent, useTrace } from 'analytics'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer/MiniPortfolio/hooks'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { isSupportedChain } from 'constants/chains'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useMemo, useState } from 'react'\nimport { ArrowDown, Plus } from 'react-feather'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useTheme } from 'styled-components'\nimport { StyledInternalLink, ThemedText } from 'theme/components'\n\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport Slider from '../../components/Slider'\nimport { Dots } from '../../components/swap/styled'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { usePairContract, useV2RouterContract } from '../../hooks/useContract'\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\nimport { useGetTransactionDeadline } from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/burn/actions'\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../state/burn/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport AppBody from '../AppBody'\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styled'\n\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nexport default function RemoveLiquidityWrapper() {\n  const { chainId } = useWeb3React()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  if (isSupportedChain(chainId) && currencyA !== currencyB) {\n    return <RemoveLiquidity />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nfunction RemoveLiquidity() {\n  const navigate = useNavigate()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, provider } = useWeb3React()\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\n\n  const theme = useTheme()\n  const trace = useTrace()\n\n  // toggle wallet when disconnected\n  const toggleWalletDrawer = useToggleAccountDrawer()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const getDeadline = useGetTransactionDeadline()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE)\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  const router = useV2RouterContract()\n\n  // allowance handling\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\n    parsedAmounts[Field.LIQUIDITY],\n    router?.address\n  )\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router?.address)\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !provider) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveCallback()\n        }\n      }\n    } else {\n      await approveCallback()\n    }\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      return _onUserInput(field, typedValue)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyAInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyBInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\n    [onUserInput]\n  )\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  async function onRemove() {\n    if (!chainId || !provider || !account || !router || !networkSupportsV2) {\n      throw new Error('missing dependencies')\n    }\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB.isNative\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    const deadline = await getDeadline()\n    if (!deadline) throw new Error('could not get deadline')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then((estimateGas) => calculateGasMargin(estimateGas))\n          .catch((error) => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            type: TransactionType.REMOVE_LIQUIDITY_V3,\n            baseCurrencyId: currencyId(currencyA),\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          })\n\n          setTxHash(response.hash)\n\n          sendAnalyticsEvent(LiquidityEventName.REMOVE_LIQUIDITY_SUBMITTED, {\n            label: [currencyA.symbol, currencyB.symbol].join('/'),\n            ...trace,\n          })\n        })\n        .catch((error: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(error)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={535}>\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize={24} fontWeight={535} style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.neutral2} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={535}>\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize={24} fontWeight={535} style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <ThemedText.DeprecatedItalic fontSize={12} color={theme.neutral2} textAlign=\"left\" padding=\"12px 0 0 0\">\n          <Trans>\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\n            will revert.\n          </Trans>\n        </ThemedText.DeprecatedItalic>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color={theme.neutral2} fontWeight={535} fontSize={16}>\n            <Trans>\n              UNI {currencyA?.symbol}/{currencyB?.symbol} Burned\n            </Trans>\n          </Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\n            <Text fontWeight={535} fontSize={16}>\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color={theme.neutral2} fontWeight={535} fontSize={16}>\n                <Trans>Price</Trans>\n              </Text>\n              <Text fontWeight={535} fontSize={16} color={theme.neutral1}>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text fontWeight={535} fontSize={16} color={theme.neutral1}>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          <Text fontWeight={535} fontSize={20}>\n            <Trans>Confirm</Trans>\n          </Text>\n        </ButtonPrimary>\n      </>\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Removing {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencyA?.symbol} and\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencyB?.symbol}\n    </Trans>\n  )\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      WRAPPED_NATIVE_CURRENCY[chainId] &&\n      ((currencyA && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyA)) ||\n        (currencyB && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyB)))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, navigate]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        navigate(`/remove/v2/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        navigate(`/remove/v2/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, navigate]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={false} adding={false} autoSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash ? txHash : ''}\n            reviewContent={() => (\n              <ConfirmationModalContent\n                title={<Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <BlueCard>\n              <AutoColumn gap=\"10px\">\n                <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                  <Trans>\n                    <b>Tip:</b> Removing pool tokens converts your position back into underlying tokens at the current\n                    rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\n                  </Trans>\n                </ThemedText.DeprecatedLink>\n              </AutoColumn>\n            </BlueCard>\n            <LightCard>\n              <AutoColumn gap=\"20px\">\n                <RowBetween>\n                  <Text fontWeight={535}>\n                    <Trans>Remove amount</Trans>\n                  </Text>\n                  <ClickableText\n                    fontWeight={535}\n                    onClick={() => {\n                      setShowDetailed(!showDetailed)\n                    }}\n                  >\n                    {showDetailed ? <Trans>Simple</Trans> : <Trans>Detailed</Trans>}\n                  </ClickableText>\n                </RowBetween>\n                <Row style={{ alignItems: 'flex-end' }}>\n                  <Text fontSize={72} fontWeight={535}>\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                  </Text>\n                </Row>\n                {!showDetailed && (\n                  <>\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                    <RowBetween>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\n                        25%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\n                        50%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\n                        75%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\n                        Max\n                      </MaxButton>\n                    </RowBetween>\n                  </>\n                )}\n              </AutoColumn>\n            </LightCard>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\n                </ColumnCenter>\n                <LightCard>\n                  <AutoColumn gap=\"10px\">\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={535}>\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={535} id=\"remove-liquidity-tokena-symbol\">\n                          {currencyA?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={535}>\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={535} id=\"remove-liquidity-tokenb-symbol\">\n                          {currencyB?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\n                        {oneCurrencyIsETH ? (\n                          <StyledInternalLink\n                            to={`/remove/v2/${\n                              currencyA?.isNative && chainId && WRAPPED_NATIVE_CURRENCY[chainId]\n                                ? WRAPPED_NATIVE_CURRENCY[chainId]?.address\n                                : currencyIdA\n                            }/${\n                              currencyB?.isNative && chainId && WRAPPED_NATIVE_CURRENCY[chainId]\n                                ? WRAPPED_NATIVE_CURRENCY[chainId]?.address\n                                : currencyIdB\n                            }`}\n                          >\n                            Receive WETH\n                          </StyledInternalLink>\n                        ) : oneCurrencyIsWETH ? (\n                          <StyledInternalLink\n                            to={`/remove/v2/${\n                              currencyA && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyA) ? 'ETH' : currencyIdA\n                            }/${\n                              currencyB && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(currencyB) ? 'ETH' : currencyIdB\n                            }`}\n                          >\n                            Receive ETH\n                          </StyledInternalLink>\n                        ) : null}\n                      </RowBetween>\n                    ) : null}\n                  </AutoColumn>\n                </LightCard>\n              </>\n            )}\n\n            {showDetailed && (\n              <>\n                <CurrencyInputPanel\n                  value={formattedAmounts[Field.LIQUIDITY]}\n                  onUserInput={onLiquidityInput}\n                  onMax={() => {\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                  }}\n                  showMaxButton={!atMaxAmount}\n                  currency={pair?.liquidityToken}\n                  pair={pair}\n                  id=\"liquidity-amount\"\n                />\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.neutral2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onCurrencyAInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyA}\n                  label=\"Output\"\n                  onCurrencySelect={handleSelectCurrencyA}\n                  id=\"remove-liquidity-tokena\"\n                />\n                <ColumnCenter>\n                  <Plus size=\"16\" color={theme.neutral2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onCurrencyBInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyB}\n                  label=\"Output\"\n                  onCurrencySelect={handleSelectCurrencyB}\n                  id=\"remove-liquidity-tokenb\"\n                />\n              </>\n            )}\n            {pair && (\n              <div style={{ padding: '10px 20px' }}>\n                <RowBetween>\n                  <Trans>Price:</Trans>\n                  <div>\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                  </div>\n                </RowBetween>\n                <RowBetween>\n                  <div />\n                  <div>\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                  </div>\n                </RowBetween>\n              </div>\n            )}\n            <div style={{ position: 'relative' }}>\n              {!account ? (\n                <TraceEvent\n                  events={[BrowserEvent.onClick]}\n                  name={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n                  properties={{ received_swap_quote: false }}\n                  element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n                >\n                  <ButtonLight onClick={toggleWalletDrawer}>\n                    <Trans>Connect wallet</Trans>\n                  </ButtonLight>\n                </TraceEvent>\n              ) : (\n                <RowBetween>\n                  <ButtonConfirmed\n                    onClick={onAttemptToApprove}\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                    mr=\"0.5rem\"\n                    fontWeight={535}\n                    fontSize={16}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <Dots>\n                        <Trans>Approving</Trans>\n                      </Dots>\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                      <Trans>Approved</Trans>\n                    ) : (\n                      <Trans>Approve</Trans>\n                    )}\n                  </ButtonConfirmed>\n                  <ButtonError\n                    onClick={() => {\n                      setShowConfirm(true)\n                    }}\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                  >\n                    <Text fontSize={16} fontWeight={535}>\n                      {error || <Trans>Remove</Trans>}\n                    </Text>\n                  </ButtonError>\n                </RowBetween>\n              )}\n            </div>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n"],"names":["StyledRangeInput","styled","input","size","theme","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","rest","changeCallback","useCallback","e","parseInt","target","type","style","padding","aria-labelledby","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","undefined","useEffect","useIsArgentWallet","call","account","useWeb3React","argentWalletDetector","useArgentWalletDetectorContract","inputs","useMemo","useSingleCallResult","NEVER_RELOAD","Boolean","result","PermitType","AMOUNT","ALLOWED","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","address","name","version","DAI","UNI","GOERLI","SEPOLIA","UseERC20PermitState","NOT_APPLICABLE","LOADING","NOT_SIGNED","SIGNED","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","useERC20Permit","currencyAmount","spender","transactionDeadline","overridePermitInfo","chainId","provider","tokenAddress","currency","isToken","eip2612Contract","useEIP2612Contract","isArgentWallet","nonceInputs","tokenNonceState","permitInfo","signatureData","setSignatureData","valid","state","gatherPermitSignature","nonceNumber","toNumber","loading","isSignatureDataValid","owner","deadline","nonce","JSBI","amount","quotient","allowed","signatureDeadline","toString","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","r","s","permitType","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","useTransactionDeadline","useBurnState","useAppSelector","burn","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityWrapper","currencyIdA","currencyIdB","useParams","currencyA","currencyB","useCurrency","isSupportedChain","RemoveLiquidity","PositionPageUnsupportedContent","parsedAmounts","pair","router","WRAPPED_NATIVE_CURRENCY","navigate","useNavigate","tokenA","tokenB","wrapped","useTheme","trace","useTrace","toggleWalletDrawer","useToggleAccountDrawer","independentField","typedValue","error","relevantTokenBalances","useV2Pair","userLiquidity","useTokenBalances","liquidityToken","tokens","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","CurrencyAmount","fromRawAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","tryParseCurrencyAmount","greaterThan","liquidityValue","multiply","useDerivedBurnInfo","onUserInput","_onUserInput","dispatch","useAppDispatch","field","typeInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","useV2RouterContract","approval","approveCallback","useApproveCallback","onAttemptToApprove","Error","code","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","useTransactionAdder","networkSupportsV2","useNetworkSupportsV2","onRemove","currencyAmountA","currencyAmountB","amountsMin","calculateSlippageAmount","currencyBIsETH","isNative","oneCurrencyIsETH","methodNames","args","ApprovalState","APPROVED","toHexString","safeGasEstimates","Promise","all","map","methodName","estimateGas","calculateGasMargin","catch","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","gasLimit","response","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","REMOVE_LIQUIDITY_SUBMITTED","label","symbol","join","modalHeader","AutoColumn","gap","marginTop","RowBetween","align","Text","fontSize","fontWeight","RowFixed","CurrencyLogo","marginLeft","Plus","color","neutral2","ThemedText","DeprecatedItalic","textAlign","modalBottom","DoubleCurrencyLogo","currency0","currency1","margin","neutral1","priceOf","div","ButtonPrimary","disabled","onClick","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWETH","equals","handleSelectCurrencyA","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","AppBody","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","BlueCard","DeprecatedLink","b","LightCard","ClickableText","Row","alignItems","MaxButton","width","ColumnCenter","ArrowDown","marginRight","id","justifyContent","StyledInternalLink","to","CurrencyInputPanel","onMax","showMaxButton","hideBalance","onCurrencySelect","position","ButtonConfirmed","confirmed","NOT_APPROVED","mr","PENDING","Dots","ButtonError","TraceEvent","events","BrowserEvent","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported"],"sourceRoot":""}