{"code":"import invariant from 'tiny-invariant';\r\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\r\n// `maxSize` by removing the last item\r\nexport function sortedInsert(items, add, maxSize, comparator) {\r\n    invariant(maxSize > 0, 'MAX_SIZE_ZERO');\r\n    // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\r\n    invariant(items.length <= maxSize, 'ITEMS_SIZE');\r\n    // short circuit first item add\r\n    if (items.length === 0) {\r\n        items.push(add);\r\n        return null;\r\n    }\r\n    else {\r\n        const isFull = items.length === maxSize;\r\n        // short circuit if full and the additional item does not come before the last item\r\n        if (isFull && comparator(items[items.length - 1], add) <= 0) {\r\n            return add;\r\n        }\r\n        let lo = 0, hi = items.length;\r\n        while (lo < hi) {\r\n            const mid = (lo + hi) >>> 1;\r\n            if (comparator(items[mid], add) <= 0) {\r\n                lo = mid + 1;\r\n            }\r\n            else {\r\n                hi = mid;\r\n            }\r\n        }\r\n        items.splice(lo, 0, add);\r\n        return isFull ? items.pop() : null;\r\n    }\r\n}\r\n//# sourceMappingURL=sortedInsert.js.map","references":["/Users/anukul/Desktop/uniswap/sdk-core/node_modules/tiny-invariant/dist/tiny-invariant.d.ts"],"map":"{\"version\":3,\"file\":\"sortedInsert.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/sortedInsert.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AAEtC,+GAA+G;AAC/G,sCAAsC;AACtC,MAAM,UAAU,YAAY,CAAI,KAAU,EAAE,GAAM,EAAE,OAAe,EAAE,UAAkC;IACrG,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE,eAAe,CAAC,CAAA;IACvC,kHAAkH;IAClH,SAAS,CAAC,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE,YAAY,CAAC,CAAA;IAEhD,+BAA+B;IAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACf,OAAO,IAAI,CAAA;KACZ;SAAM;QACL,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,OAAO,CAAA;QACvC,mFAAmF;QACnF,IAAI,MAAM,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAC3D,OAAO,GAAG,CAAA;SACX;QAED,IAAI,EAAE,GAAG,CAAC,EACR,EAAE,GAAG,KAAK,CAAC,MAAM,CAAA;QAEnB,OAAO,EAAE,GAAG,EAAE,EAAE;YACd,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAA;YAC3B,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;gBACpC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;aACb;iBAAM;gBACL,EAAE,GAAG,GAAG,CAAA;aACT;SACF;QACD,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;QACxB,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAG,CAAC,CAAC,CAAC,IAAI,CAAA;KACpC;AACH,CAAC\"}"}
