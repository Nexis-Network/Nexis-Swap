{"code":"import { BigNumber } from '@ethersproject/bignumber';\r\nimport invariant from 'tiny-invariant';\r\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress';\r\nimport { BaseCurrency } from './baseCurrency';\r\n/**\r\n * Represents an ERC20 token with a unique address and some metadata.\r\n */\r\nexport class Token extends BaseCurrency {\r\n    /**\r\n     *\r\n     * @param chainId {@link BaseCurrency#chainId}\r\n     * @param address The contract address on the chain on which this token lives\r\n     * @param decimals {@link BaseCurrency#decimals}\r\n     * @param symbol {@link BaseCurrency#symbol}\r\n     * @param name {@link BaseCurrency#name}\r\n     * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\r\n     * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\r\n     * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\r\n     */\r\n    constructor(chainId, address, decimals, symbol, name, bypassChecksum, buyFeeBps, sellFeeBps) {\r\n        super(chainId, decimals, symbol, name);\r\n        this.isNative = false;\r\n        this.isToken = true;\r\n        if (bypassChecksum) {\r\n            this.address = checkValidAddress(address);\r\n        }\r\n        else {\r\n            this.address = validateAndParseAddress(address);\r\n        }\r\n        if (buyFeeBps) {\r\n            invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES');\r\n        }\r\n        if (sellFeeBps) {\r\n            invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES');\r\n        }\r\n        this.buyFeeBps = buyFeeBps;\r\n        this.sellFeeBps = sellFeeBps;\r\n    }\r\n    /**\r\n     * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n     * @param other other token to compare\r\n     */\r\n    equals(other) {\r\n        return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase();\r\n    }\r\n    /**\r\n     * Returns true if the address of this token sorts before the address of the other token\r\n     * @param other other token to compare\r\n     * @throws if the tokens have the same address\r\n     * @throws if the tokens are on different chains\r\n     */\r\n    sortsBefore(other) {\r\n        invariant(this.chainId === other.chainId, 'CHAIN_IDS');\r\n        return this.address.toLowerCase() < other.address.toLowerCase();\r\n    }\r\n    /**\r\n     * Return this token, which does not need to be wrapped\r\n     */\r\n    get wrapped() {\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=token.js.map","references":["/Users/anukul/Desktop/playground/nexis/Nexis-Swap/sdk-core-nexis/node_modules/@ethersproject/bignumber/lib/index.d.ts","/Users/anukul/Desktop/playground/nexis/Nexis-Swap/sdk-core-nexis/node_modules/tiny-invariant/dist/tiny-invariant.d.ts","/Users/anukul/Desktop/playground/nexis/Nexis-Swap/sdk-core-nexis/src/utils/validateAndParseAddress.ts","/Users/anukul/Desktop/playground/nexis/Nexis-Swap/sdk-core-nexis/src/entities/baseCurrency.ts","/Users/anukul/Desktop/playground/nexis/Nexis-Swap/sdk-core-nexis/src/entities/currency.ts"],"map":"{\"version\":3,\"file\":\"token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/entities/token.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,SAAS,MAAM,gBAAgB,CAAA;AACtC,OAAO,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAA;AAC7F,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAG7C;;GAEG;AACH,MAAM,OAAO,KAAM,SAAQ,YAAY;IAgBrC;;;;;;;;;;OAUG;IACH,YACE,OAAe,EACf,OAAe,EACf,QAAgB,EAChB,MAAe,EACf,IAAa,EACb,cAAwB,EACxB,SAAqB,EACrB,UAAsB;QAEtB,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;QApCxB,aAAQ,GAAU,KAAK,CAAA;QACvB,YAAO,GAAS,IAAI,CAAA;QAoClC,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAA;SAC1C;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAA;SAChD;QACD,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAA;SACrE;QACD,IAAI,UAAU,EAAE;YACd,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAA;SACtE;QACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;IAC9B,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAe;QAC3B,OAAO,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA;IACtH,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,KAAY;QAC7B,SAAS,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA;IACjE,CAAC;IAED;;OAEG;IACH,IAAW,OAAO;QAChB,OAAO,IAAI,CAAA;IACb,CAAC;CACF\"}"}
